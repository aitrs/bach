{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0","program":"/home/dorian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ipnetwork","--edition=2018","/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","-C","metadata=0218d67a0cbec3a5","-C","extra-filename=-0218d67a0cbec3a5","--out-dir","/home/dorian/workspace/bach/modules/rsync/target/rls/debug/deps","-L","dependency=/home/dorian/workspace/bach/modules/rsync/target/rls/debug/deps","--extern","serde=/home/dorian/workspace/bach/modules/rsync/target/rls/debug/deps/libserde-4ab2fd0aefd2fc60.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dorian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dorian/workspace/bach/modules/rsync/target/rls/debug/deps/libipnetwork-0218d67a0cbec3a5.rmeta"},"prelude":{"crate_id":{"name":"ipnetwork","disambiguator":[15819497768013907713,691655751730261765]},"crate_root":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src","external_crates":[{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","num":19,"id":{"name":"serde","disambiguator":[15054579488423963075,9712645400539432587]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","num":20,"id":{"name":"serde_derive","disambiguator":[4388396162875531242,6657401215377954819]}}],"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":0,"byte_end":12150,"line_start":1,"line_end":385,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":401,"byte_end":415,"line_start":18,"line_end":18,"column_start":24,"column_end":38},"alias_span":null,"name":"IpNetworkError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":438,"byte_end":457,"line_start":19,"line_end":19,"column_start":22,"column_end":41},"alias_span":null,"name":"Ipv4NetworkIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":98},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":481,"byte_end":500,"line_start":20,"line_end":20,"column_start":23,"column_end":42},"alias_span":null,"name":"ipv4_mask_to_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":502,"byte_end":513,"line_start":20,"line_end":20,"column_start":44,"column_end":55},"alias_span":null,"name":"Ipv4Network","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":537,"byte_end":556,"line_start":21,"line_end":21,"column_start":22,"column_end":41},"alias_span":null,"name":"Ipv6NetworkIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":580,"byte_end":599,"line_start":22,"line_end":22,"column_start":23,"column_end":42},"alias_span":null,"name":"ipv6_mask_to_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":284},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":601,"byte_end":612,"line_start":22,"line_end":22,"column_start":44,"column_end":55},"alias_span":null,"name":"Ipv6Network","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":0,"byte_end":12150,"line_start":1,"line_end":385,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":33},{"krate":0,"index":99},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":313},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":339},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":200},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":365},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":234}],"decl_id":null,"docs":" The `ipnetwork` crate provides a set of APIs to work with IP CIDRs in\n Rust.\n","sig":null,"attributes":[{"value":"/ The `ipnetwork` crate provides a set of APIs to work with IP CIDRs in","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":0,"byte_end":73,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ Rust.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":74,"byte_end":83,"line_start":2,"line_end":2,"column_start":1,"column_end":10}},{"value":"crate_type = \"lib\"","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":84,"byte_end":106,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations, unsafe_code, unused_extern_crates,\n       unused_import_braces)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":168,"byte_end":281,"line_start":6,"line_end":10,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":236},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/common.rs","byte_start":12333,"byte_end":12344,"line_start":6,"line_end":6,"column_start":5,"column_end":16},"name":"InvalidAddr","qualname":"::common::IpNetworkError::InvalidAddr","value":"IpNetworkError::InvalidAddr(String)","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":239},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/common.rs","byte_start":12358,"byte_end":12371,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"InvalidPrefix","qualname":"::common::IpNetworkError::InvalidPrefix","value":"IpNetworkError::InvalidPrefix","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/common.rs","byte_start":12377,"byte_end":12394,"line_start":8,"line_end":8,"column_start":5,"column_end":22},"name":"InvalidCidrFormat","qualname":"::common::IpNetworkError::InvalidCidrFormat","value":"IpNetworkError::InvalidCidrFormat(String)","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":235},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/common.rs","byte_start":12312,"byte_end":12326,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"IpNetworkError","qualname":"::common::IpNetworkError","value":"pub enum IpNetworkError {\n    InvalidAddr(String),\n    InvalidPrefix,\n    InvalidCidrFormat(String),\n}","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":241}],"decl_id":null,"docs":" Represents a bunch of errors that can occur while working with a `IpNetwork`\n","sig":null,"attributes":[{"value":"/ Represents a bunch of errors that can occur while working with a `IpNetwork`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/common.rs","byte_start":12183,"byte_end":12263,"line_start":3,"line_end":3,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":14354,"byte_end":14365,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"Ipv4Network","qualname":"::ipv4::Ipv4Network","value":"Ipv4Network {  }","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"decl_id":null,"docs":" Represents a network range where the IP addresses are of v4\n","sig":null,"attributes":[{"value":"/ Represents a network range where the IP addresses are of v4","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":14211,"byte_end":14274,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":15212,"byte_end":15215,"line_start":38,"line_end":38,"column_start":18,"column_end":21},"name":"new","qualname":"<Ipv4Network>::new","value":"pub const fn new(Ipv4Addr, u8) -> Result<Ipv4Network, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv4Network` from any `Ipv4Addr` and a prefix denoting the network size.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv4Network` from any `Ipv4Addr` and a prefix denoting the network size.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":14999,"byte_end":15093,"line_start":35,"line_end":35,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":15098,"byte_end":15101,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the prefix is larger than 32 this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":15106,"byte_end":15194,"line_start":37,"line_end":37,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":15633,"byte_end":15645,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"with_netmask","qualname":"<Ipv4Network>::with_netmask","value":"pub fn with_netmask(Ipv4Addr, Ipv4Addr) -> Result<Ipv4Network, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv4Network` from a network address and a network mask.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv4Network` from a network address and a network mask.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":15447,"byte_end":15524,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":15529,"byte_end":15532,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If the netmask is not valid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":15537,"byte_end":15621,"line_start":48,"line_end":48,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16113,"byte_end":16117,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"iter","qualname":"<Ipv4Network>::iter","value":"pub fn iter(Self) -> Ipv4NetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `Ipv4Network`. Each call to `next` will return the next\n `Ipv4Addr` in the given network. `None` will be returned when there are no more\n addresses.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over `Ipv4Network`. Each call to `next` will return the next","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":15910,"byte_end":15994,"line_start":61,"line_end":61,"column_start":5,"column_end":89}},{"value":"/ `Ipv4Addr` in the given network. `None` will be returned when there are no more","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":15999,"byte_end":16082,"line_start":62,"line_end":62,"column_start":5,"column_end":88}},{"value":"/ addresses.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16087,"byte_end":16101,"line_start":63,"line_end":63,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16347,"byte_end":16349,"line_start":73,"line_end":73,"column_start":12,"column_end":14},"name":"ip","qualname":"<Ipv4Network>::ip","value":"pub fn ip(Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16406,"byte_end":16412,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Ipv4Network>::prefix","value":"pub fn prefix(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16533,"byte_end":16545,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"is_subnet_of","qualname":"<Ipv4Network>::is_subnet_of","value":"pub fn is_subnet_of(Self, Ipv4Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv4Network` is a subnet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv4Network` is a subnet of the other.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16458,"byte_end":16521,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16743,"byte_end":16757,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"is_supernet_of","qualname":"<Ipv4Network>::is_supernet_of","value":"pub fn is_supernet_of(Self, Ipv4Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv4Network` is a supernet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv4Network` is a supernet of the other.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16666,"byte_end":16731,"line_start":86,"line_end":86,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16917,"byte_end":16925,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"overlaps","qualname":"<Ipv4Network>::overlaps","value":"pub fn overlaps(Self, Ipv4Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv4Network` is partly contained in other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv4Network` is partly contained in other.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":16838,"byte_end":16905,"line_start":91,"line_end":91,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17667,"byte_end":17671,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"mask","qualname":"<Ipv4Network>::mask","value":"pub fn mask(Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the mask for this `Ipv4Network`.\n That means the `prefix` most significant bits will be 1 and the rest 0","sig":null,"attributes":[{"value":"/ Returns the mask for this `Ipv4Network`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17142,"byte_end":17186,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ That means the `prefix` most significant bits will be 1 and the rest 0","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17191,"byte_end":17265,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17270,"byte_end":17273,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17278,"byte_end":17292,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17297,"byte_end":17300,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17305,"byte_end":17312,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17317,"byte_end":17344,"line_start":104,"line_end":104,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17349,"byte_end":17380,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17385,"byte_end":17388,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"127.0.0.0\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17393,"byte_end":17449,"line_start":107,"line_end":107,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(net.mask(), Ipv4Addr::new(255, 255, 255, 255));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17454,"byte_end":17516,"line_start":108,"line_end":108,"column_start":5,"column_end":67}},{"value":"/ let net: Ipv4Network = \"127.0.0.0/16\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17521,"byte_end":17580,"line_start":109,"line_end":109,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.mask(), Ipv4Addr::new(255, 255, 0, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17585,"byte_end":17643,"line_start":110,"line_end":110,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17648,"byte_end":17655,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18243,"byte_end":18250,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv4Network>::network","value":"pub fn network(Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the network denoted by this `Ipv4Network`.\n This means the lowest possible IPv4 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the address of the network denoted by this `Ipv4Network`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17825,"byte_end":17894,"line_start":118,"line_end":118,"column_start":5,"column_end":74}},{"value":"/ This means the lowest possible IPv4 address inside of the network.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17899,"byte_end":17969,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17974,"byte_end":17977,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":17982,"byte_end":17996,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18001,"byte_end":18004,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18009,"byte_end":18016,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18021,"byte_end":18048,"line_start":124,"line_end":124,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18053,"byte_end":18084,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18089,"byte_end":18092,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.1.9.32/16\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18097,"byte_end":18156,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.network(), Ipv4Addr::new(10, 1, 0, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18161,"byte_end":18219,"line_start":128,"line_end":128,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18224,"byte_end":18231,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18813,"byte_end":18822,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv4Network>::broadcast","value":"pub fn broadcast(Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcasting address of this `Ipv4Network`.\n This means the highest possible IPv4 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the broadcasting address of this `Ipv4Network`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18398,"byte_end":18457,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/ This means the highest possible IPv4 address inside of the network.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18462,"byte_end":18533,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18538,"byte_end":18541,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18546,"byte_end":18560,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18565,"byte_end":18568,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18573,"byte_end":18580,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18585,"byte_end":18612,"line_start":142,"line_end":142,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18617,"byte_end":18648,"line_start":143,"line_end":143,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18653,"byte_end":18656,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.9.0.32/16\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18661,"byte_end":18720,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.broadcast(), Ipv4Addr::new(10, 9, 255, 255));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18725,"byte_end":18789,"line_start":146,"line_end":146,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18794,"byte_end":18801,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19390,"byte_end":19398,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv4Network>::contains","value":"pub fn contains(Self, Ipv4Addr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a given `Ipv4Addr` is in this `Ipv4Network`","sig":null,"attributes":[{"value":"/ Checks if a given `Ipv4Addr` is in this `Ipv4Network`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":18985,"byte_end":19042,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19047,"byte_end":19050,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19055,"byte_end":19069,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19074,"byte_end":19077,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19082,"byte_end":19089,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19094,"byte_end":19121,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19126,"byte_end":19157,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19162,"byte_end":19165,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"127.0.0.0/24\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19170,"byte_end":19229,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ assert!(net.contains(Ipv4Addr::new(127, 0, 0, 70)));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19234,"byte_end":19290,"line_start":163,"line_end":163,"column_start":5,"column_end":61}},{"value":"/ assert!(!net.contains(Ipv4Addr::new(127, 0, 1, 70)));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19295,"byte_end":19352,"line_start":164,"line_end":164,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19357,"byte_end":19364,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19369,"byte_end":19378,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20019,"byte_end":20023,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"size","qualname":"<Ipv4Network>::size","value":"pub fn size(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns number of possible host addresses in this `Ipv4Network`.","sig":null,"attributes":[{"value":"/ Returns number of possible host addresses in this `Ipv4Network`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19589,"byte_end":19657,"line_start":173,"line_end":173,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19662,"byte_end":19665,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19670,"byte_end":19684,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19689,"byte_end":19692,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19697,"byte_end":19704,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19709,"byte_end":19736,"line_start":178,"line_end":178,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19741,"byte_end":19772,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19777,"byte_end":19780,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.1.0.0/16\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19785,"byte_end":19843,"line_start":181,"line_end":181,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(net.size(), 65536);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19848,"byte_end":19882,"line_start":182,"line_end":182,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19887,"byte_end":19890,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let tinynet: Ipv4Network = \"0.0.0.0/32\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19895,"byte_end":19956,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(tinynet.size(), 1);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":19961,"byte_end":19995,"line_start":185,"line_end":185,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20000,"byte_end":20007,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20833,"byte_end":20836,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"nth","qualname":"<Ipv4Network>::nth","value":"pub fn nth(Self, u32) -> Option<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `n`:th address within this network.\n The adresses are indexed from 0 and `n` must be smaller than the size of the network.","sig":null,"attributes":[{"value":"/ Returns the `n`:th address within this network.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20144,"byte_end":20195,"line_start":192,"line_end":192,"column_start":5,"column_end":56}},{"value":"/ The adresses are indexed from 0 and `n` must be smaller than the size of the network.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20200,"byte_end":20289,"line_start":193,"line_end":193,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20294,"byte_end":20297,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20302,"byte_end":20316,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20321,"byte_end":20324,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20329,"byte_end":20336,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20341,"byte_end":20368,"line_start":198,"line_end":198,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv4Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20373,"byte_end":20404,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20409,"byte_end":20412,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"192.168.0.0/24\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20417,"byte_end":20478,"line_start":201,"line_end":201,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(net.nth(0).unwrap(), Ipv4Addr::new(192, 168, 0, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20483,"byte_end":20550,"line_start":202,"line_end":202,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(net.nth(15).unwrap(), Ipv4Addr::new(192, 168, 0, 15));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20555,"byte_end":20624,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ assert!(net.nth(256).is_none());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20629,"byte_end":20665,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20670,"byte_end":20673,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let net2: Ipv4Network = \"10.0.0.0/16\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20678,"byte_end":20737,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net2.nth(256).unwrap(), Ipv4Addr::new(10, 0, 1, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20742,"byte_end":20809,"line_start":207,"line_end":207,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":20814,"byte_end":20821,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":277},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":22651,"byte_end":22670,"line_start":276,"line_end":276,"column_start":12,"column_end":31},"name":"Ipv4NetworkIterator","qualname":"::ipv4::Ipv4NetworkIterator","value":"Ipv4NetworkIterator {  }","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":98},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":23334,"byte_end":23353,"line_start":306,"line_end":306,"column_start":8,"column_end":27},"name":"ipv4_mask_to_prefix","qualname":"::ipv4::ipv4_mask_to_prefix","value":"pub fn ipv4_mask_to_prefix(Ipv4Addr) -> Result<u8, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Ipv4Addr` network mask into a prefix.","sig":null,"attributes":[{"value":"/ Converts a `Ipv4Addr` network mask into a prefix.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":23189,"byte_end":23242,"line_start":303,"line_end":303,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":23243,"byte_end":23246,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":23247,"byte_end":23326,"line_start":305,"line_end":305,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":284},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":34577,"byte_end":34588,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"Ipv6Network","qualname":"::ipv6::Ipv6Network","value":"Ipv6Network {  }","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"decl_id":null,"docs":" Represents a network range where the IP addresses are of v6\n","sig":null,"attributes":[{"value":"/ Represents a network range where the IP addresses are of v6","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":34434,"byte_end":34497,"line_start":7,"line_end":7,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35436,"byte_end":35439,"line_start":39,"line_end":39,"column_start":18,"column_end":21},"name":"new","qualname":"<Ipv6Network>::new","value":"pub const fn new(Ipv6Addr, u8) -> Result<Ipv6Network, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv6Network` from any `Ipv6Addr` and a prefix denoting the network size.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv6Network` from any `Ipv6Addr` and a prefix denoting the network size.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35222,"byte_end":35316,"line_start":36,"line_end":36,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35321,"byte_end":35324,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ If the prefix is larger than 128 this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35329,"byte_end":35418,"line_start":38,"line_end":38,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35857,"byte_end":35869,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"with_netmask","qualname":"<Ipv6Network>::with_netmask","value":"pub fn with_netmask(Ipv6Addr, Ipv6Addr) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Ipv6Network` from a network address and a network mask.","sig":null,"attributes":[{"value":"/ Constructs a new `Ipv6Network` from a network address and a network mask.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35671,"byte_end":35748,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35753,"byte_end":35756,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If the netmask is not valid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35761,"byte_end":35845,"line_start":49,"line_end":49,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36307,"byte_end":36311,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"iter","qualname":"<Ipv6Network>::iter","value":"pub fn iter(&Self) -> Ipv6NetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `Ipv6Network`. Each call to `next` will return the next\n `Ipv6Addr` in the given network. `None` will be returned when there are no more\n addresses.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over `Ipv6Network`. Each call to `next` will return the next","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36104,"byte_end":36188,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/ `Ipv6Addr` in the given network. `None` will be returned when there are no more","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36193,"byte_end":36276,"line_start":60,"line_end":60,"column_start":5,"column_end":88}},{"value":"/ addresses.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36281,"byte_end":36295,"line_start":61,"line_end":61,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37219,"byte_end":37226,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv6Network>::network","value":"pub fn network(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the network denoted by this `Ipv6Network`.\n This means the lowest possible IPv6 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the address of the network denoted by this `Ipv6Network`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36780,"byte_end":36849,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/ This means the lowest possible IPv6 address inside of the network.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36854,"byte_end":36924,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36929,"byte_end":36932,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36937,"byte_end":36951,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36956,"byte_end":36959,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36964,"byte_end":36971,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":36976,"byte_end":37003,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37008,"byte_end":37039,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37044,"byte_end":37047,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"2001:db8::/96\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37052,"byte_end":37112,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(net.network(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37117,"byte_end":37195,"line_start":89,"line_end":89,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37200,"byte_end":37207,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37816,"byte_end":37825,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv6Network>::broadcast","value":"pub fn broadcast(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcast address of this `Ipv6Network`.\n This means the highest possible IPv4 address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the broadcast address of this `Ipv6Network`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37377,"byte_end":37433,"line_start":97,"line_end":97,"column_start":5,"column_end":61}},{"value":"/ This means the highest possible IPv4 address inside of the network.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37438,"byte_end":37509,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37514,"byte_end":37517,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37522,"byte_end":37536,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37541,"byte_end":37544,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37549,"byte_end":37556,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37561,"byte_end":37588,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37593,"byte_end":37624,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37629,"byte_end":37632,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"2001:db8::/96\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37637,"byte_end":37697,"line_start":106,"line_end":106,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(net.broadcast(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0xffff, 0xffff));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37702,"byte_end":37792,"line_start":107,"line_end":107,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37797,"byte_end":37804,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":37998,"byte_end":38000,"line_start":115,"line_end":115,"column_start":12,"column_end":14},"name":"ip","qualname":"<Ipv6Network>::ip","value":"pub fn ip(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38058,"byte_end":38064,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Ipv6Network>::prefix","value":"pub fn prefix(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38186,"byte_end":38198,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"is_subnet_of","qualname":"<Ipv6Network>::is_subnet_of","value":"pub fn is_subnet_of(Self, Ipv6Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv6Network` is a subnet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv6Network` is a subnet of the other.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38111,"byte_end":38174,"line_start":123,"line_end":123,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38396,"byte_end":38410,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"is_supernet_of","qualname":"<Ipv6Network>::is_supernet_of","value":"pub fn is_supernet_of(Self, Ipv6Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv6Network` is a supernet of the other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv6Network` is a supernet of the other.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38319,"byte_end":38384,"line_start":128,"line_end":128,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38570,"byte_end":38578,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"overlaps","qualname":"<Ipv6Network>::overlaps","value":"pub fn overlaps(Self, Ipv6Network) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the given `Ipv6Network` is partly contained in other.\n","sig":null,"attributes":[{"value":"/ Checks if the given `Ipv6Network` is partly contained in other.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38491,"byte_end":38558,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39378,"byte_end":39382,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"mask","qualname":"<Ipv6Network>::mask","value":"pub fn mask(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the mask for this `Ipv6Network`.\n That means the `prefix` most significant bits will be 1 and the rest 0","sig":null,"attributes":[{"value":"/ Returns the mask for this `Ipv6Network`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38795,"byte_end":38839,"line_start":140,"line_end":140,"column_start":5,"column_end":49}},{"value":"/ That means the `prefix` most significant bits will be 1 and the rest 0","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38844,"byte_end":38918,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38923,"byte_end":38926,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38931,"byte_end":38945,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38950,"byte_end":38953,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38958,"byte_end":38965,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":38970,"byte_end":38997,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39002,"byte_end":39033,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39038,"byte_end":39041,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"ff01::0\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39046,"byte_end":39100,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39105,"byte_end":39211,"line_start":150,"line_end":150,"column_start":5,"column_end":111}},{"value":"/ let net: Ipv6Network = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39216,"byte_end":39273,"line_start":151,"line_end":151,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39278,"byte_end":39354,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39359,"byte_end":39366,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40237,"byte_end":40245,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv6Network>::contains","value":"pub fn contains(&Self, Ipv6Addr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a given `Ipv6Addr` is in this `Ipv6Network`","sig":null,"attributes":[{"value":"/ Checks if a given `Ipv6Addr` is in this `Ipv6Network`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39802,"byte_end":39859,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39864,"byte_end":39867,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39872,"byte_end":39886,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39891,"byte_end":39894,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39899,"byte_end":39906,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39911,"byte_end":39938,"line_start":170,"line_end":170,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39943,"byte_end":39974,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39979,"byte_end":39982,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":39987,"byte_end":40044,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"/ assert!(net.contains(Ipv6Addr::new(0xff01, 0, 0, 0, 0, 0, 0, 0x1)));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40049,"byte_end":40121,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"/ assert!(!net.contains(Ipv6Addr::new(0xffff, 0, 0, 0, 0, 0, 0, 0x1)));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40126,"byte_end":40199,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40204,"byte_end":40211,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40216,"byte_end":40225,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":41010,"byte_end":41014,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"size","qualname":"<Ipv6Network>::size","value":"pub fn size(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns number of possible host addresses in this `Ipv6Network`.","sig":null,"attributes":[{"value":"/ Returns number of possible host addresses in this `Ipv6Network`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40556,"byte_end":40624,"line_start":189,"line_end":189,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40629,"byte_end":40632,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40637,"byte_end":40651,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40656,"byte_end":40659,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40664,"byte_end":40671,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40676,"byte_end":40703,"line_start":194,"line_end":194,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::Ipv6Network;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40708,"byte_end":40739,"line_start":195,"line_end":195,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40744,"byte_end":40747,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv6Network = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40752,"byte_end":40809,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.size(), 79228162514264337593543950336);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40814,"byte_end":40872,"line_start":198,"line_end":198,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40877,"byte_end":40880,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let tinynet: Ipv6Network = \"ff01::0/128\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40885,"byte_end":40947,"line_start":200,"line_end":200,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(tinynet.size(), 1);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40952,"byte_end":40986,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":40991,"byte_end":40998,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":306},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":42418,"byte_end":42437,"line_start":254,"line_end":254,"column_start":12,"column_end":31},"name":"Ipv6NetworkIterator","qualname":"::ipv6::Ipv6NetworkIterator","value":"Ipv6NetworkIterator {  }","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":43264,"byte_end":43283,"line_start":289,"line_end":289,"column_start":8,"column_end":27},"name":"ipv6_mask_to_prefix","qualname":"::ipv6::ipv6_mask_to_prefix","value":"pub fn ipv6_mask_to_prefix(Ipv6Addr) -> Result<u8, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Ipv6Addr` network mask into a prefix.\n If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.\n","sig":null,"attributes":[{"value":"/ Converts a `Ipv6Addr` network mask into a prefix.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":43123,"byte_end":43176,"line_start":287,"line_end":287,"column_start":1,"column_end":54}},{"value":"/ If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":43177,"byte_end":43256,"line_start":288,"line_end":288,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":810,"byte_end":812,"line_start":28,"line_end":28,"column_start":5,"column_end":7},"name":"V4","qualname":"::IpNetwork::V4","value":"IpNetwork::V4(Ipv4Network)","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":831,"byte_end":833,"line_start":29,"line_end":29,"column_start":5,"column_end":7},"name":"V6","qualname":"::IpNetwork::V6","value":"IpNetwork::V6(Ipv6Network)","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":313},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":794,"byte_end":803,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"IpNetwork","qualname":"::IpNetwork","value":"pub enum IpNetwork { V4(Ipv4Network), V6(Ipv6Network), }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":317}],"decl_id":null,"docs":" Represents a generic network range. This type can have two variants:\n the v4 and the v6 case.\n","sig":null,"attributes":[{"value":"/ Represents a generic network range. This type can have two variants:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":616,"byte_end":688,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ the v4 and the v6 case.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":689,"byte_end":716,"line_start":25,"line_end":25,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":340},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1607,"byte_end":1609,"line_start":56,"line_end":56,"column_start":5,"column_end":7},"name":"V4","qualname":"::NetworkSize::V4","value":"NetworkSize::V4(u32)","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":343},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1620,"byte_end":1622,"line_start":57,"line_end":57,"column_start":5,"column_end":7},"name":"V6","qualname":"::NetworkSize::V6","value":"NetworkSize::V6(u128)","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":339},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1589,"byte_end":1600,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"NetworkSize","qualname":"::NetworkSize","value":"pub enum NetworkSize { V4(u32), V6(u128), }","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":343}],"decl_id":null,"docs":" Represents a generic network size. For IPv4, the max size is a u32 and for IPv6, it is a u128\n","sig":null,"attributes":[{"value":"/ Represents a generic network size. For IPv4, the max size is a u32 and for IPv6, it is a u128","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1414,"byte_end":1511,"line_start":53,"line_end":53,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<IpNetwork>::new","value":"pub fn new(IpAddr, u8) -> Result<IpNetwork, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `IpNetwork` from a given `IpAddr` and a prefix denoting the\n network size. If the prefix is larger than 32 (for IPv4) or 128 (for IPv6), this\n will raise an `IpNetworkError::InvalidPrefix` error. Support for IPv6 is not\n complete yet.\n","sig":null,"attributes":[{"value":"/ Constructs a new `IpNetwork` from a given `IpAddr` and a prefix denoting the","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1654,"byte_end":1734,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ network size. If the prefix is larger than 32 (for IPv4) or 128 (for IPv6), this","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1739,"byte_end":1823,"line_start":62,"line_end":62,"column_start":5,"column_end":89}},{"value":"/ will raise an `IpNetworkError::InvalidPrefix` error. Support for IPv6 is not","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1828,"byte_end":1908,"line_start":63,"line_end":63,"column_start":5,"column_end":85}},{"value":"/ complete yet.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1913,"byte_end":1930,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2389,"byte_end":2401,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"with_netmask","qualname":"<IpNetwork>::with_netmask","value":"pub fn with_netmask(IpAddr, IpAddr) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `IpNetwork` from a network address and a network mask.","sig":null,"attributes":[{"value":"/ Constructs a new `IpNetwork` from a network address and a network mask.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2205,"byte_end":2280,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2285,"byte_end":2288,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If the netmask is not valid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2293,"byte_end":2377,"line_start":74,"line_end":74,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2624,"byte_end":2626,"line_start":81,"line_end":81,"column_start":12,"column_end":14},"name":"ip","qualname":"<IpNetwork>::ip","value":"pub fn ip(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP part of a given `IpNetwork`\n","sig":null,"attributes":[{"value":"/ Returns the IP part of a given `IpNetwork`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2566,"byte_end":2612,"line_start":80,"line_end":80,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3282,"byte_end":3288,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IpNetwork>::prefix","value":"pub fn prefix(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prefix of the given `IpNetwork`","sig":null,"attributes":[{"value":"/ Returns the prefix of the given `IpNetwork`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2801,"byte_end":2848,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2853,"byte_end":2856,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2861,"byte_end":2874,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2879,"byte_end":2886,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2891,"byte_end":2920,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2925,"byte_end":2928,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(IpNetwork::V4(\"10.9.0.1\".parse().unwrap()).prefix(), 32u8);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":2933,"byte_end":3007,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(IpNetwork::V4(\"10.9.0.32/16\".parse().unwrap()).prefix(), 16u8);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3012,"byte_end":3090,"line_start":95,"line_end":95,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3095,"byte_end":3098,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(IpNetwork::V6(\"ff01::0\".parse().unwrap()).prefix(), 128u8);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3103,"byte_end":3177,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(IpNetwork::V6(\"ff01::0/32\".parse().unwrap()).prefix(), 32u8);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3182,"byte_end":3258,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3263,"byte_end":3270,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4011,"byte_end":4018,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"network","qualname":"<IpNetwork>::network","value":"pub fn network(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the network denoted by this `IpNetwork`.\n This means the lowest possible IP address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the address of the network denoted by this `IpNetwork`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3443,"byte_end":3510,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/ This means the lowest possible IP address inside of the network.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3515,"byte_end":3583,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3588,"byte_end":3591,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3596,"byte_end":3610,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3615,"byte_end":3618,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3623,"byte_end":3630,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use std::net::{Ipv4Addr, Ipv6Addr};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3635,"byte_end":3674,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3679,"byte_end":3708,"line_start":114,"line_end":114,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3713,"byte_end":3716,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let net: IpNetwork = \"10.1.9.32/16\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3721,"byte_end":3778,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.network(), Ipv4Addr::new(10, 1, 0, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3783,"byte_end":3841,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ let net: IpNetwork = \"2001:db8::/96\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3846,"byte_end":3904,"line_start":118,"line_end":118,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(net.network(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3909,"byte_end":3987,"line_start":119,"line_end":119,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":3992,"byte_end":3999,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4627,"byte_end":4636,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<IpNetwork>::broadcast","value":"pub fn broadcast(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcasting address of this `IpNetwork`.\n This means the highest possible IP address inside of the network.","sig":null,"attributes":[{"value":"/ Returns the broadcasting address of this `IpNetwork`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4203,"byte_end":4260,"line_start":128,"line_end":128,"column_start":5,"column_end":62}},{"value":"/ This means the highest possible IP address inside of the network.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4265,"byte_end":4334,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4339,"byte_end":4342,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4347,"byte_end":4361,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4366,"byte_end":4369,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4374,"byte_end":4381,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4386,"byte_end":4413,"line_start":134,"line_end":134,"column_start":5,"column_end":32}},{"value":"/ use ipnetwork::{IpNetwork, Ipv4Network};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4418,"byte_end":4462,"line_start":135,"line_end":135,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4467,"byte_end":4470,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let net: Ipv4Network = \"10.9.0.32/16\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4475,"byte_end":4534,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(net.broadcast(), Ipv4Addr::new(10, 9, 255, 255));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4539,"byte_end":4603,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4608,"byte_end":4615,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5693,"byte_end":5697,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"mask","qualname":"<IpNetwork>::mask","value":"pub fn mask(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the mask for this `IpNetwork`.\n That means the `prefix` most significant bits will be 1 and the rest 0","sig":null,"attributes":[{"value":"/ Returns the mask for this `IpNetwork`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4825,"byte_end":4867,"line_start":147,"line_end":147,"column_start":5,"column_end":47}},{"value":"/ That means the `prefix` most significant bits will be 1 and the rest 0","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4872,"byte_end":4946,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4951,"byte_end":4954,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4959,"byte_end":4972,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4977,"byte_end":4980,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4985,"byte_end":4992,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":4997,"byte_end":5026,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/ use std::net::{Ipv4Addr, Ipv6Addr};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5031,"byte_end":5070,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5075,"byte_end":5078,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let v4_net: IpNetwork = \"10.9.0.1\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5083,"byte_end":5139,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(v4_net.mask(), Ipv4Addr::new(255, 255, 255, 255));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5144,"byte_end":5209,"line_start":157,"line_end":157,"column_start":5,"column_end":70}},{"value":"/ let v4_net: IpNetwork = \"10.9.0.32/16\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5214,"byte_end":5274,"line_start":158,"line_end":158,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(v4_net.mask(), Ipv4Addr::new(255, 255, 0, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5279,"byte_end":5340,"line_start":159,"line_end":159,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5345,"byte_end":5348,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let v6_net: IpNetwork = \"ff01::0\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5353,"byte_end":5408,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(v6_net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5413,"byte_end":5522,"line_start":162,"line_end":162,"column_start":5,"column_end":114}},{"value":"/ let v6_net: IpNetwork = \"ff01::0/32\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5527,"byte_end":5585,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(v6_net.mask(), Ipv6Addr::new(0xffff, 0xffff, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5590,"byte_end":5669,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5674,"byte_end":5681,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6258,"byte_end":6265,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"is_ipv4","qualname":"<IpNetwork>::is_ipv4","value":"pub fn is_ipv4(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the IP in this `IpNetwork` is a valid IPv4 address,\n false if it's a valid IPv6 address.","sig":null,"attributes":[{"value":"/ Returns true if the IP in this `IpNetwork` is a valid IPv4 address,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5876,"byte_end":5947,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/ false if it's a valid IPv6 address.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5952,"byte_end":5991,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":5996,"byte_end":5999,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6004,"byte_end":6017,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6022,"byte_end":6025,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6030,"byte_end":6036,"line_start":178,"line_end":178,"column_start":5,"column_end":11}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6041,"byte_end":6070,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6075,"byte_end":6078,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let v4: IpNetwork = IpNetwork::V4(\"10.9.0.32/16\".parse().unwrap());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6083,"byte_end":6154,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(v4.is_ipv4(), true);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6159,"byte_end":6194,"line_start":182,"line_end":182,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v4.is_ipv6(), false);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6199,"byte_end":6235,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6240,"byte_end":6246,"line_start":184,"line_end":184,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6783,"byte_end":6790,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"is_ipv6","qualname":"<IpNetwork>::is_ipv6","value":"pub fn is_ipv6(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the IP in this `IpNetwork` is a valid IPv6 address,\n false if it's a valid IPv4 address.","sig":null,"attributes":[{"value":"/ Returns true if the IP in this `IpNetwork` is a valid IPv6 address,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6403,"byte_end":6474,"line_start":192,"line_end":192,"column_start":5,"column_end":76}},{"value":"/ false if it's a valid IPv4 address.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6479,"byte_end":6518,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6523,"byte_end":6526,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6531,"byte_end":6544,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6549,"byte_end":6552,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6557,"byte_end":6563,"line_start":197,"line_end":197,"column_start":5,"column_end":11}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6568,"byte_end":6597,"line_start":198,"line_end":198,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6602,"byte_end":6605,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let v6: IpNetwork = IpNetwork::V6(\"ff01::0/32\".parse().unwrap());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6610,"byte_end":6679,"line_start":200,"line_end":200,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(v6.is_ipv6(), true);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6684,"byte_end":6719,"line_start":201,"line_end":201,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v6.is_ipv4(), false);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6724,"byte_end":6760,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":6765,"byte_end":6771,"line_start":203,"line_end":203,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7659,"byte_end":7667,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"contains","qualname":"<IpNetwork>::contains","value":"pub fn contains(&Self, IpAddr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a given `IpAddr` is in this `IpNetwork`","sig":null,"attributes":[{"value":"/ Checks if a given `IpAddr` is in this `IpNetwork`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7115,"byte_end":7168,"line_start":215,"line_end":215,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7173,"byte_end":7176,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7181,"byte_end":7195,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7200,"byte_end":7203,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7208,"byte_end":7215,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use std::net::IpAddr;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7220,"byte_end":7245,"line_start":220,"line_end":220,"column_start":5,"column_end":30}},{"value":"/ use ipnetwork::IpNetwork;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7250,"byte_end":7279,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7284,"byte_end":7287,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let net: IpNetwork = \"127.0.0.0/24\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7292,"byte_end":7349,"line_start":223,"line_end":223,"column_start":5,"column_end":62}},{"value":"/ let ip1: IpAddr = \"127.0.0.1\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7354,"byte_end":7405,"line_start":224,"line_end":224,"column_start":5,"column_end":56}},{"value":"/ let ip2: IpAddr = \"172.0.0.1\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7410,"byte_end":7461,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/ let ip4: IpAddr = \"::1\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7466,"byte_end":7511,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/ assert!(net.contains(ip1));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7516,"byte_end":7547,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ assert!(!net.contains(ip2));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7552,"byte_end":7584,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ assert!(!net.contains(ip4));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7589,"byte_end":7621,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7626,"byte_end":7633,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7638,"byte_end":7647,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8227,"byte_end":8231,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"size","qualname":"<IpNetwork>::size","value":"pub fn size(&Self) -> NetworkSize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of possible host addresses in this `IpAddr`","sig":null,"attributes":[{"value":"/ Returns the number of possible host addresses in this `IpAddr`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7910,"byte_end":7976,"line_start":240,"line_end":240,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7981,"byte_end":7984,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":7989,"byte_end":8003,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8008,"byte_end":8011,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8016,"byte_end":8023,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use ipnetwork::{IpNetwork, NetworkSize};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8028,"byte_end":8072,"line_start":245,"line_end":245,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8077,"byte_end":8080,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8085,"byte_end":8088,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let net: IpNetwork = \"127.0.0.0/24\".parse().unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8093,"byte_end":8150,"line_start":248,"line_end":248,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(net.size(), NetworkSize::V4(256))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8155,"byte_end":8203,"line_start":249,"line_end":249,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8208,"byte_end":8215,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8596,"byte_end":8600,"line_start":261,"line_end":261,"column_start":12,"column_end":16},"name":"iter","qualname":"<IpNetwork>::iter","value":"pub fn iter(&Self) -> IpNetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the addresses contained in the network.","sig":null,"attributes":[{"value":"/ Returns an iterator over the addresses contained in the network.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8429,"byte_end":8497,"line_start":258,"line_end":258,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8502,"byte_end":8505,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This lists all the addresses in the network range, in ascending order.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":8510,"byte_end":8584,"line_start":260,"line_end":260,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":10797,"byte_end":10814,"line_start":342,"line_end":342,"column_start":12,"column_end":29},"name":"IpNetworkIterator","qualname":"::IpNetworkIterator","value":"IpNetworkIterator {  }","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":11480,"byte_end":11497,"line_start":366,"line_end":366,"column_start":8,"column_end":25},"name":"ip_mask_to_prefix","qualname":"::ip_mask_to_prefix","value":"pub fn ip_mask_to_prefix(IpAddr) -> Result<u8, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `IpAddr` network mask into a prefix.\n If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.\n","sig":null,"attributes":[{"value":"/ Converts a `IpAddr` network mask into a prefix.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":11341,"byte_end":11392,"line_start":364,"line_end":364,"column_start":1,"column_end":52}},{"value":"/ If the mask is invalid this will return an `IpNetworkError::InvalidPrefix`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":11393,"byte_end":11472,"line_start":365,"line_end":365,"column_start":1,"column_end":80}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/common.rs","byte_start":12429,"byte_end":12443,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/common.rs","byte_start":12813,"byte_end":12827,"line_start":22,"line_end":22,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":14471,"byte_end":14482,"line_start":14,"line_end":14,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":14786,"byte_end":14797,"line_start":25,"line_end":25,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":14981,"byte_end":14992,"line_start":34,"line_end":34,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":21068,"byte_end":21079,"line_start":219,"line_end":219,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":21632,"byte_end":21643,"line_start":238,"line_end":238,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":22304,"byte_end":22315,"line_start":258,"line_end":258,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":22474,"byte_end":22485,"line_start":266,"line_end":266,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":22731,"byte_end":22750,"line_start":281,"line_end":281,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":34694,"byte_end":34705,"line_start":15,"line_end":15,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35009,"byte_end":35020,"line_start":26,"line_end":26,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35204,"byte_end":35215,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":41587,"byte_end":41598,"line_start":222,"line_end":222,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":42070,"byte_end":42081,"line_start":236,"line_end":236,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":42240,"byte_end":42251,"line_start":244,"line_end":244,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":42500,"byte_end":42519,"line_start":259,"line_end":259,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":42980,"byte_end":42991,"line_start":281,"line_end":281,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":915,"byte_end":924,"line_start":33,"line_end":33,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1226,"byte_end":1235,"line_start":44,"line_end":44,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1638,"byte_end":1647,"line_start":60,"line_end":60,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":9395,"byte_end":9404,"line_start":284,"line_end":284,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":9792,"byte_end":9801,"line_start":297,"line_end":297,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":9961,"byte_end":9970,"line_start":305,"line_end":305,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":10079,"byte_end":10088,"line_start":311,"line_end":311,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":10192,"byte_end":10201,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":10439,"byte_end":10448,"line_start":326,"line_end":326,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":10873,"byte_end":10890,"line_start":346,"line_end":346,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/common.rs","byte_start":12429,"byte_end":12443,"line_start":11,"line_end":11,"column_start":23,"column_end":37},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":235},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/common.rs","byte_start":12813,"byte_end":12827,"line_start":22,"line_end":22,"column_start":16,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":235},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":14471,"byte_end":14482,"line_start":14,"line_end":14,"column_start":39,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":255},"to":{"krate":19,"index":1535}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":14786,"byte_end":14797,"line_start":25,"line_end":25,"column_start":27,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":255},"to":{"krate":19,"index":2074}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":14981,"byte_end":14992,"line_start":34,"line_end":34,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":21068,"byte_end":21079,"line_start":219,"line_end":219,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":21632,"byte_end":21643,"line_start":238,"line_end":238,"column_start":18,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":11370}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":22304,"byte_end":22315,"line_start":258,"line_end":258,"column_start":24,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":22474,"byte_end":22485,"line_start":266,"line_end":266,"column_start":25,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv4.rs","byte_start":22731,"byte_end":22750,"line_start":281,"line_end":281,"column_start":19,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":277},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":34694,"byte_end":34705,"line_start":15,"line_end":15,"column_start":39,"column_end":50},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":284},"to":{"krate":19,"index":1535}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35009,"byte_end":35020,"line_start":26,"line_end":26,"column_start":27,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":284},"to":{"krate":19,"index":2074}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":35204,"byte_end":35215,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":41587,"byte_end":41598,"line_start":222,"line_end":222,"column_start":18,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":11370}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":42070,"byte_end":42081,"line_start":236,"line_end":236,"column_start":24,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":42240,"byte_end":42251,"line_start":244,"line_end":244,"column_start":25,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":42500,"byte_end":42519,"line_start":259,"line_end":259,"column_start":19,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":306},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/ipv6.rs","byte_start":42980,"byte_end":42991,"line_start":281,"line_end":281,"column_start":23,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":915,"byte_end":924,"line_start":33,"line_end":33,"column_start":39,"column_end":48},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":313},"to":{"krate":19,"index":1535}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1226,"byte_end":1235,"line_start":44,"line_end":44,"column_start":27,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":313},"to":{"krate":19,"index":2074}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":1638,"byte_end":1647,"line_start":60,"line_end":60,"column_start":6,"column_end":15},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":9395,"byte_end":9404,"line_start":284,"line_end":284,"column_start":18,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":11370}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":9792,"byte_end":9801,"line_start":297,"line_end":297,"column_start":24,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":9961,"byte_end":9970,"line_start":305,"line_end":305,"column_start":28,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":10079,"byte_end":10088,"line_start":311,"line_end":311,"column_start":28,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":10192,"byte_end":10201,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":10439,"byte_end":10448,"line_start":326,"line_end":326,"column_start":23,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnetwork-0.18.0/src/lib.rs","byte_start":10873,"byte_end":10890,"line_start":346,"line_end":346,"column_start":19,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":7310}}]}