{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0","program":"/home/dorian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","quick_xml","/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","--cfg","feature=\"serialize\"","-C","metadata=0b736f007f5ea863","-C","extra-filename=-0b736f007f5ea863","--out-dir","/home/dorian/workspace/bach/modules/reporter/target/rls/debug/deps","-L","dependency=/home/dorian/workspace/bach/modules/reporter/target/rls/debug/deps","--extern","memchr=/home/dorian/workspace/bach/modules/reporter/target/rls/debug/deps/libmemchr-1f0d97dc9aa3dd56.rmeta","--extern","serde=/home/dorian/workspace/bach/modules/reporter/target/rls/debug/deps/libserde-e7a5e1b02fd308f2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dorian/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dorian/workspace/bach/modules/reporter/target/rls/debug/deps/libquick_xml-0b736f007f5ea863.rmeta"},"prelude":{"crate_id":{"name":"quick_xml","disambiguator":[8817696260296104246,3764409545803784992]},"crate_root":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src","external_crates":[{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":19,"id":{"name":"memchr","disambiguator":[6698107515402656589,8833762150615898274]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":20,"id":{"name":"serde","disambiguator":[12639195662710580915,4569984013764291526]}},{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","num":21,"id":{"name":"serde_derive","disambiguator":[2818101163654004335,9009094810505582643]}}],"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":0,"byte_end":4913,"line_start":1,"line_end":144,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9976,"byte_end":9983,"line_start":115,"line_end":115,"column_start":35,"column_end":42},"alias_span":null,"name":"DeError","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":404},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4624,"byte_end":4630,"line_start":130,"line_end":130,"column_start":23,"column_end":29},"alias_span":null,"name":"escape","value":"","parent":{"krate":0,"index":417}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4632,"byte_end":4640,"line_start":130,"line_end":130,"column_start":31,"column_end":39},"alias_span":null,"name":"unescape","value":"","parent":{"krate":0,"index":417}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4642,"byte_end":4655,"line_start":130,"line_end":130,"column_start":41,"column_end":54},"alias_span":null,"name":"unescape_with","value":"","parent":{"krate":0,"index":417}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4824,"byte_end":4831,"line_start":141,"line_end":141,"column_start":28,"column_end":35},"alias_span":null,"name":"DeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4850,"byte_end":4855,"line_start":142,"line_end":142,"column_start":18,"column_end":23},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4857,"byte_end":4863,"line_start":142,"line_end":142,"column_start":25,"column_end":31},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1427},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4882,"byte_end":4888,"line_start":143,"line_end":143,"column_start":17,"column_end":23},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4906,"byte_end":4912,"line_start":144,"line_end":144,"column_start":17,"column_end":23},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":0,"byte_end":4913,"line_start":1,"line_end":144,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":350},{"krate":0,"index":384},{"krate":0,"index":417},{"krate":0,"index":435},{"krate":0,"index":696},{"krate":0,"index":846},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150}],"decl_id":null,"docs":" High performance XML reader/writer.","sig":null,"attributes":[{"value":"/ High performance XML reader/writer.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":0,"byte_end":39,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":40,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Description","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":44,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":63,"byte_end":66,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - `Reader`: a low level xml pull-reader where buffer allocation/clearing is left to user","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":67,"byte_end":159,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ - `Writer`: a xml writer. Can be nested with readers if you want to transform xmls","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":160,"byte_end":246,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":247,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":251,"byte_end":266,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":267,"byte_end":270,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ### Reader","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":271,"byte_end":285,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":286,"byte_end":289,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":290,"byte_end":301,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":302,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":329,"byte_end":362,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":363,"byte_end":366,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":367,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":405,"byte_end":461,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/                 <tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":462,"byte_end":488,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/                     Test 2","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":489,"byte_end":519,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/                 </tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":520,"byte_end":547,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":548,"byte_end":574,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":575,"byte_end":578,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":579,"byte_end":622,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":623,"byte_end":650,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":651,"byte_end":654,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":655,"byte_end":677,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":678,"byte_end":707,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":708,"byte_end":737,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":738,"byte_end":741,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // The `Reader` does not implement `Iterator` because it outputs borrowed data (`Cow`s)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":742,"byte_end":833,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ loop {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":834,"byte_end":844,"line_start":31,"line_end":31,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":845,"byte_end":888,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/     // for triggering namespaced events, use this instead:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":889,"byte_end":951,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/     // match reader.read_namespaced_event(&mut buf) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":952,"byte_end":1009,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1010,"byte_end":1050,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/         // for namespaced:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1051,"byte_end":1081,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/         // Ok((ref namespace_value, Event::Start(ref e)))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1082,"byte_end":1143,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/             match e.name() {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1144,"byte_end":1176,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/                 b\"tag1\" => println!(\"attributes values: {:?}\",","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1177,"byte_end":1243,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/                                     e.attributes().map(|a| a.unwrap().value)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1244,"byte_end":1324,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/                                     .collect::<Vec<_>>()),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1325,"byte_end":1387,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/                 b\"tag2\" => count += 1,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1388,"byte_end":1430,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/                 _ => (),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1431,"byte_end":1459,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1460,"byte_end":1477,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1478,"byte_end":1492,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/         // unescape and decode the text event using the reader encoding","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1493,"byte_end":1568,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).unwrap()),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1569,"byte_end":1653,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"/         Ok(Event::Eof) => break, // exits the loop when reaching end of file","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1654,"byte_end":1734,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1735,"byte_end":1823,"line_start":49,"line_end":49,"column_start":1,"column_end":89}},{"value":"/         _ => (), // There are several other `Event`s we do not consider here","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1824,"byte_end":1904,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/     }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1905,"byte_end":1914,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1915,"byte_end":1918,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     // if we don't keep a borrow elsewhere, we can clear the buffer to keep memory usage low","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":1919,"byte_end":2015,"line_start":53,"line_end":53,"column_start":1,"column_end":97}},{"value":"/     buf.clear();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2016,"byte_end":2036,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2037,"byte_end":2042,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2043,"byte_end":2050,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2051,"byte_end":2054,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ### Writer","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2055,"byte_end":2069,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2070,"byte_end":2073,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2074,"byte_end":2085,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ use quick_xml::Writer;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2086,"byte_end":2112,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::{Event, BytesEnd, BytesStart};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2113,"byte_end":2170,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2171,"byte_end":2197,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2198,"byte_end":2222,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/ use std::iter;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2223,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<this_tag k1=\"v1\" k2=\"v2\"><child>text</child></this_tag>\"#;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2246,"byte_end":2322,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2323,"byte_end":2366,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2367,"byte_end":2394,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/ let mut writer = Writer::new(Cursor::new(Vec::new()));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2395,"byte_end":2453,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2454,"byte_end":2483,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2484,"byte_end":2494,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2495,"byte_end":2538,"line_start":73,"line_end":73,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2539,"byte_end":2606,"line_start":74,"line_end":74,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2607,"byte_end":2610,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/             // crates a new element ... alternatively we could reuse `e` by calling","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2611,"byte_end":2698,"line_start":76,"line_end":76,"column_start":1,"column_end":88}},{"value":"/             // `e.into_owned()`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2699,"byte_end":2734,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/             let mut elem = BytesStart::owned(b\"my_elem\".to_vec(), \"my_elem\".len());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2735,"byte_end":2822,"line_start":78,"line_end":78,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2823,"byte_end":2826,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             // collect existing attributes","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2827,"byte_end":2873,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/             elem.extend_attributes(e.attributes().map(|attr| attr.unwrap()));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2874,"byte_end":2955,"line_start":81,"line_end":81,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2956,"byte_end":2959,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/             // copy existing attributes, adds a new my-key=\"some value\" attribute","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":2960,"byte_end":3045,"line_start":83,"line_end":83,"column_start":1,"column_end":86}},{"value":"/             elem.push_attribute((\"my-key\", \"some value\"));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3046,"byte_end":3108,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3109,"byte_end":3112,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/             // writes the event to the writer","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3113,"byte_end":3162,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/             assert!(writer.write_event(Event::Start(elem)).is_ok());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3163,"byte_end":3235,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"/         },","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3236,"byte_end":3250,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::End(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3251,"byte_end":3316,"line_start":89,"line_end":89,"column_start":1,"column_end":66}},{"value":"/             assert!(writer.write_event(Event::End(BytesEnd::borrowed(b\"my_elem\"))).is_ok());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3317,"byte_end":3413,"line_start":90,"line_end":90,"column_start":1,"column_end":97}},{"value":"/         },","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3414,"byte_end":3428,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3429,"byte_end":3465,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/         Ok(e) => assert!(writer.write_event(e).is_ok()),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3466,"byte_end":3526,"line_start":93,"line_end":93,"column_start":1,"column_end":61}},{"value":"/         // or using the buffer","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3527,"byte_end":3561,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/         // Ok(e) => assert!(writer.write(&buf).is_ok()),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3562,"byte_end":3622,"line_start":95,"line_end":95,"column_start":1,"column_end":61}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3623,"byte_end":3711,"line_start":96,"line_end":96,"column_start":1,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3712,"byte_end":3721,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3722,"byte_end":3742,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3743,"byte_end":3748,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3749,"byte_end":3752,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let result = writer.into_inner().into_inner();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3753,"byte_end":3803,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/ let expected = r#\"<my_elem k1=\"v1\" k2=\"v2\" my-key=\"some value\"><child>text</child></my_elem>\"#;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3804,"byte_end":3903,"line_start":102,"line_end":102,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(result, expected.as_bytes());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3904,"byte_end":3948,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3949,"byte_end":3956,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3957,"byte_end":3960,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3961,"byte_end":3975,"line_start":106,"line_end":106,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3976,"byte_end":3979,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ quick-xml supports 2 additional features, non activated by default:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":3980,"byte_end":4051,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ - `encoding`: support non utf8 xmls","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4052,"byte_end":4091,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/ - `serialize`: support serde `Serialize`/`Deserialize`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4092,"byte_end":4150,"line_start":110,"line_end":110,"column_start":1,"column_end":59}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4151,"byte_end":4174,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4175,"byte_end":4197,"line_start":112,"line_end":112,"column_start":1,"column_end":23}},{"value":"recursion_limit = \"1024\"","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4198,"byte_end":4226,"line_start":113,"line_end":113,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":83},{"krate":0,"index":152},{"krate":0,"index":197},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":307}],"decl_id":null,"docs":" Serde `Deserializer` module","sig":null,"attributes":[{"value":"cfg(feature = \"serialize\")","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4425,"byte_end":4454,"line_start":123,"line_end":123,"column_start":1,"column_end":30}},{"value":"/ Serde `Deserializer` module","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":4915,"byte_end":4946,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":4947,"byte_end":4950,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":4951,"byte_end":4965,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":4966,"byte_end":4969,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example parsing [crates.io](https://crates.io/) source code.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":4970,"byte_end":5051,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5052,"byte_end":5055,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5056,"byte_end":5063,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ // Cargo.toml","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5064,"byte_end":5081,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/ // [dependencies]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5082,"byte_end":5103,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/ // serde = { version = \"1.0\", features = [ \"derive\" ] }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5104,"byte_end":5163,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ // quick-xml = { version = \"0.21\", features = [ \"serialize\" ] }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5164,"byte_end":5231,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ extern crate serde;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5232,"byte_end":5255,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ extern crate quick_xml;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5256,"byte_end":5283,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5284,"byte_end":5287,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ use serde::Deserialize;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5288,"byte_end":5315,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/ use quick_xml::de::{from_str, DeError};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5316,"byte_end":5359,"line_start":16,"line_end":16,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5360,"byte_end":5363,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5364,"byte_end":5408,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/ struct Link {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5409,"byte_end":5426,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"/     rel: String,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5427,"byte_end":5447,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"/     href: String,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5448,"byte_end":5469,"line_start":21,"line_end":21,"column_start":1,"column_end":22}},{"value":"/     sizes: Option<String>,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5470,"byte_end":5500,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5501,"byte_end":5506,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5507,"byte_end":5510,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5511,"byte_end":5555,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ #[serde(rename_all = \"lowercase\")]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5556,"byte_end":5594,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ enum Lang {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5595,"byte_end":5610,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     En,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5611,"byte_end":5622,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/     Fr,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5623,"byte_end":5634,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/     De,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5635,"byte_end":5646,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5647,"byte_end":5652,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5653,"byte_end":5656,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5657,"byte_end":5701,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ struct Head {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5702,"byte_end":5719,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/     title: String,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5720,"byte_end":5742,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/     #[serde(rename = \"link\", default)]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5743,"byte_end":5785,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/     links: Vec<Link>,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5786,"byte_end":5811,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5812,"byte_end":5817,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5818,"byte_end":5821,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5822,"byte_end":5866,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/ struct Script {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5867,"byte_end":5886,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"/     src: String,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5887,"byte_end":5907,"line_start":42,"line_end":42,"column_start":1,"column_end":21}},{"value":"/     integrity: String,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5908,"byte_end":5934,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5935,"byte_end":5940,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5941,"byte_end":5944,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5945,"byte_end":5989,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/ struct Body {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":5990,"byte_end":6007,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/     #[serde(rename = \"script\", default)]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6008,"byte_end":6052,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/     scripts: Vec<Script>,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6053,"byte_end":6082,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6083,"byte_end":6088,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6089,"byte_end":6092,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6093,"byte_end":6137,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ struct Html {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6138,"byte_end":6155,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/     lang: Option<String>,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6156,"byte_end":6185,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/     head: Head,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6186,"byte_end":6205,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/     body: Body,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6206,"byte_end":6225,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6226,"byte_end":6231,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6232,"byte_end":6235,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ fn crates_io() -> Result<Html, DeError> {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6236,"byte_end":6281,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/     let xml = \"<!DOCTYPE html>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6282,"byte_end":6316,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         <html lang=\\\"en\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6317,"byte_end":6347,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/           <head>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6348,"byte_end":6368,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/             <meta charset=\\\"utf-8\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6369,"byte_end":6409,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/             <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6410,"byte_end":6483,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/             <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6484,"byte_end":6572,"line_start":65,"line_end":65,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6573,"byte_end":6576,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/             <title>crates.io: Rust Package Registry</title>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6577,"byte_end":6640,"line_start":67,"line_end":67,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6641,"byte_end":6644,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6645,"byte_end":6648,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/         <meta name=\\\"cargo/config/environment\\\" content=\\\"%7B%22modulePrefix%22%3A%22cargo%22%2C%22environment%22%3A%22production%22%2C%22rootURL%22%3A%22%2F%22%2C%22locationType%22%3A%22router-scroll%22%2C%22historySupportMiddleware%22%3Atrue%2C%22EmberENV%22%3A%7B%22FEATURES%22%3A%7B%7D%2C%22EXTEND_PROTOTYPES%22%3A%7B%22Date%22%3Afalse%7D%7D%2C%22APP%22%3A%7B%22name%22%3A%22cargo%22%2C%22version%22%3A%22b7796c9%22%7D%2C%22fastboot%22%3A%7B%22hostWhitelist%22%3A%5B%22crates.io%22%2C%7B%7D%2C%7B%7D%5D%7D%2C%22ember-cli-app-version%22%3A%7B%22version%22%3A%22b7796c9%22%7D%2C%22ember-cli-mirage%22%3A%7B%22usingProxy%22%3Afalse%2C%22useDefaultPassthroughs%22%3Atrue%7D%2C%22exportApplicationGlobal%22%3Afalse%7D\\\" />","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":6649,"byte_end":7374,"line_start":70,"line_end":70,"column_start":1,"column_end":726}},{"value":"/         <!-- EMBER_CLI_FASTBOOT_TITLE --><!-- EMBER_CLI_FASTBOOT_HEAD -->","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":7375,"byte_end":7452,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/         <link rel=\\\"manifest\\\" href=\\\"/manifest.webmanifest\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":7453,"byte_end":7519,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/         <link rel=\\\"apple-touch-icon\\\" href=\\\"/cargo-835dd6a18132048a52ac569f2615b59d.png\\\" sizes=\\\"227x227\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":7520,"byte_end":7634,"line_start":73,"line_end":73,"column_start":1,"column_end":115}},{"value":"/         <meta name=\\\"theme-color\\\" content=\\\"#f9f7ec\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":7635,"byte_end":7694,"line_start":74,"line_end":74,"column_start":1,"column_end":60}},{"value":"/         <meta name=\\\"apple-mobile-web-app-capable\\\" content=\\\"yes\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":7695,"byte_end":7767,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"/         <meta name=\\\"apple-mobile-web-app-title\\\" content=\\\"crates.io: Rust Package Registry\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":7768,"byte_end":7867,"line_start":76,"line_end":76,"column_start":1,"column_end":100}},{"value":"/         <meta name=\\\"apple-mobile-web-app-status-bar-style\\\" content=\\\"default\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":7868,"byte_end":7953,"line_start":77,"line_end":77,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":7954,"byte_end":7957,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/             <link rel=\\\"stylesheet\\\" href=\\\"/assets/vendor-8d023d47762d5431764f589a6012123e.css\\\" integrity=\\\"sha256-EoB7fsYkdS7BZba47+C/9D7yxwPZojsE4pO7RIuUXdE= sha512-/SzGQGR0yj5AG6YPehZB3b6MjpnuNCTOGREQTStETobVRrpYPZKneJwcL/14B8ufcvobJGFDvnTKdcDDxbh6/A==\\\" >","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":7958,"byte_end":8223,"line_start":79,"line_end":79,"column_start":1,"column_end":266}},{"value":"/             <link rel=\\\"stylesheet\\\" href=\\\"/assets/cargo-cedb8082b232ce89dd449d869fb54b98.css\\\" integrity=\\\"sha256-S9K9jZr6nSyYicYad3JdiTKrvsstXZrvYqmLUX9i3tc= sha512-CDGjy3xeyiqBgUMa+GelihW394pqAARXwsU+HIiOotlnp1sLBVgO6v2ZszL0arwKU8CpvL9wHyLYBIdfX92YbQ==\\\" >","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8224,"byte_end":8488,"line_start":80,"line_end":80,"column_start":1,"column_end":265}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8489,"byte_end":8492,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8493,"byte_end":8496,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/             <link rel=\\\"shortcut icon\\\" href=\\\"/favicon.ico\\\" type=\\\"image/x-icon\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8497,"byte_end":8585,"line_start":83,"line_end":83,"column_start":1,"column_end":89}},{"value":"/             <link rel=\\\"icon\\\" href=\\\"/cargo-835dd6a18132048a52ac569f2615b59d.png\\\" type=\\\"image/png\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8586,"byte_end":8693,"line_start":84,"line_end":84,"column_start":1,"column_end":108}},{"value":"/             <link rel=\\\"search\\\" href=\\\"/opensearch.xml\\\" type=\\\"application/opensearchdescription+xml\\\" title=\\\"Cargo\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8694,"byte_end":8819,"line_start":85,"line_end":85,"column_start":1,"column_end":126}},{"value":"/           </head>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8820,"byte_end":8841,"line_start":86,"line_end":86,"column_start":1,"column_end":22}},{"value":"/           <body>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8842,"byte_end":8862,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/             <!-- EMBER_CLI_FASTBOOT_BODY -->","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8863,"byte_end":8911,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/             <noscript>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8912,"byte_end":8938,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/                 <div id=\\\"main\\\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8939,"byte_end":8976,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/                     <div class='noscript'>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":8977,"byte_end":9023,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/                         This site requires JavaScript to be enabled.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9024,"byte_end":9096,"line_start":92,"line_end":92,"column_start":1,"column_end":73}},{"value":"/                     </div>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9097,"byte_end":9127,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/                 </div>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9128,"byte_end":9154,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/             </noscript>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9155,"byte_end":9182,"line_start":95,"line_end":95,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9183,"byte_end":9186,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/             <script src=\\\"/assets/vendor-bfe89101b20262535de5a5ccdc276965.js\\\" integrity=\\\"sha256-U12Xuwhz1bhJXWyFW/hRr+Wa8B6FFDheTowik5VLkbw= sha512-J/cUUuUN55TrdG8P6Zk3/slI0nTgzYb8pOQlrXfaLgzr9aEumr9D1EzmFyLy1nrhaDGpRN1T8EQrU21Jl81pJQ==\\\" ></script>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9187,"byte_end":9442,"line_start":97,"line_end":97,"column_start":1,"column_end":256}},{"value":"/             <script src=\\\"/assets/cargo-4023b68501b7b3e17b2bb31f50f5eeea.js\\\" integrity=\\\"sha256-9atimKc1KC6HMJF/B07lP3Cjtgr2tmET8Vau0Re5mVI= sha512-XJyBDQU4wtA1aPyPXaFzTE5Wh/mYJwkKHqZ/Fn4p/ezgdKzSCFu6FYn81raBCnCBNsihfhrkb88uF6H5VraHMA==\\\" ></script>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9443,"byte_end":9697,"line_start":98,"line_end":98,"column_start":1,"column_end":255}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9698,"byte_end":9701,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9702,"byte_end":9705,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/           </body>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9706,"byte_end":9727,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/         </html>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9728,"byte_end":9747,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/ }\";","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9748,"byte_end":9755,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/     let html: Html = from_str(xml)?;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9756,"byte_end":9796,"line_start":104,"line_end":104,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(&html.head.title, \"crates.io: Rust Package Registr\");","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9797,"byte_end":9869,"line_start":105,"line_end":105,"column_start":1,"column_end":73}},{"value":"/     Ok(html)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9870,"byte_end":9886,"line_start":106,"line_end":106,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9887,"byte_end":9892,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":9893,"byte_end":9900,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10225,"byte_end":10237,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":" An xml deserializer\n","sig":null,"attributes":[{"value":"/ An xml deserializer","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10190,"byte_end":10213,"line_start":126,"line_end":126,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":290},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10375,"byte_end":10383,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"from_str","qualname":"::de::from_str","value":"pub fn from_str<T: DeserializeOwned>(&str) -> Result<T, DeError>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a xml string\n","sig":null,"attributes":[{"value":"/ Deserialize a xml string","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10339,"byte_end":10367,"line_start":133,"line_end":133,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":292},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10508,"byte_end":10519,"line_start":139,"line_end":139,"column_start":8,"column_end":19},"name":"from_reader","qualname":"::de::from_reader","value":"pub fn from_reader<R: BufRead, T: DeserializeOwned>(R) -> Result<T, DeError>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize from a reader\n","sig":null,"attributes":[{"value":"/ Deserialize from a reader","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10471,"byte_end":10500,"line_start":138,"line_end":138,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10748,"byte_end":10751,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer<R>>::new","value":"pub fn new(Reader<R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a new deserializer\n","sig":null,"attributes":[{"value":"/ Get a new deserializer","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10710,"byte_end":10736,"line_start":145,"line_end":145,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10966,"byte_end":10977,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Deserializer<R>>::from_reader","value":"pub fn from_reader(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a new deserializer from a regular BufRead\n","sig":null,"attributes":[{"value":"/ Get a new deserializer from a regular BufRead","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10905,"byte_end":10954,"line_start":154,"line_end":154,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71739,"byte_end":71741,"line_start":7,"line_end":7,"column_start":5,"column_end":7},"name":"Io","qualname":"::errors::Error::Io","value":"Error::Io(::std::io::Error)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" IO error\n","sig":null,"attributes":[{"value":"/ IO error","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71722,"byte_end":71734,"line_start":6,"line_end":6,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71784,"byte_end":71788,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::Error::Utf8","value":"Error::Utf8(::std::str::Utf8Error)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Utf8 error\n","sig":null,"attributes":[{"value":"/ Utf8 error","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71765,"byte_end":71779,"line_start":8,"line_end":8,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1234},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71848,"byte_end":71861,"line_start":11,"line_end":11,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::errors::Error::UnexpectedEof","value":"Error::UnexpectedEof(String)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Unexpected End of File\n","sig":null,"attributes":[{"value":"/ Unexpected End of File","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71817,"byte_end":71843,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":1237},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71902,"byte_end":71918,"line_start":13,"line_end":13,"column_start":5,"column_end":21},"name":"EndEventMismatch","qualname":"::errors::Error::EndEventMismatch","value":"Error::EndEventMismatch { expected, found }","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" End event mismatch\n","sig":null,"attributes":[{"value":"/ End event mismatch","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71875,"byte_end":71897,"line_start":12,"line_end":12,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72065,"byte_end":72080,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::errors::Error::UnexpectedToken","value":"Error::UnexpectedToken(String)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Unexpected token\n","sig":null,"attributes":[{"value":"/ Unexpected token","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72040,"byte_end":72060,"line_start":19,"line_end":19,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72117,"byte_end":72131,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"UnexpectedBang","qualname":"::errors::Error::UnexpectedBang","value":"Error::UnexpectedBang","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Unexpected <!>\n","sig":null,"attributes":[{"value":"/ Unexpected <!>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72094,"byte_end":72112,"line_start":21,"line_end":21,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1245},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72184,"byte_end":72196,"line_start":24,"line_end":24,"column_start":5,"column_end":17},"name":"TextNotFound","qualname":"::errors::Error::TextNotFound","value":"Error::TextNotFound","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Text not found, expected `Event::Text`\n","sig":null,"attributes":[{"value":"/ Text not found, expected `Event::Text`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72137,"byte_end":72179,"line_start":23,"line_end":23,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72263,"byte_end":72284,"line_start":26,"line_end":26,"column_start":5,"column_end":26},"name":"XmlDeclWithoutVersion","qualname":"::errors::Error::XmlDeclWithoutVersion","value":"Error::XmlDeclWithoutVersion(Option<String>)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" `Event::XmlDecl` must start with *version* attribute\n","sig":null,"attributes":[{"value":"/ `Event::XmlDecl` must start with *version* attribute","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72202,"byte_end":72258,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1250},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72344,"byte_end":72357,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"name":"NameWithQuote","qualname":"::errors::Error::NameWithQuote","value":"Error::NameWithQuote(usize)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Attribute Name contains quote\n","sig":null,"attributes":[{"value":"/ Attribute Name contains quote","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72306,"byte_end":72339,"line_start":27,"line_end":27,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1253},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72417,"byte_end":72430,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"NoEqAfterName","qualname":"::errors::Error::NoEqAfterName","value":"Error::NoEqAfterName(usize)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Attribute key not followed by with `=`\n","sig":null,"attributes":[{"value":"/ Attribute key not followed by with `=`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72370,"byte_end":72412,"line_start":29,"line_end":29,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1256},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72478,"byte_end":72491,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"name":"UnquotedValue","qualname":"::errors::Error::UnquotedValue","value":"Error::UnquotedValue(usize)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Attribute value not quoted\n","sig":null,"attributes":[{"value":"/ Attribute value not quoted","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72443,"byte_end":72473,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1259},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72532,"byte_end":72551,"line_start":34,"line_end":34,"column_start":5,"column_end":24},"name":"DuplicatedAttribute","qualname":"::errors::Error::DuplicatedAttribute","value":"Error::DuplicatedAttribute(usize, usize)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Duplicate attribute\n","sig":null,"attributes":[{"value":"/ Duplicate attribute","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72504,"byte_end":72527,"line_start":33,"line_end":33,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1263},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72592,"byte_end":72603,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"EscapeError","qualname":"::errors::Error::EscapeError","value":"Error::EscapeError(::escape::EscapeError)","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" Escape error\n","sig":null,"attributes":[{"value":"/ Escape error","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72571,"byte_end":72587,"line_start":35,"line_end":35,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":1227},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71710,"byte_end":71715,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n    Io(::std::io::Error),\n    Utf8(::std::str::Utf8Error),\n    UnexpectedEof(String),\n    EndEventMismatch {\n        expected: String,\n        found: String,\n    },\n    UnexpectedToken(String),\n    UnexpectedBang,\n    TextNotFound,\n    XmlDeclWithoutVersion(Option<String>),\n    NameWithQuote(usize),\n    NoEqAfterName(usize),\n    UnquotedValue(usize),\n    DuplicatedAttribute(usize, usize),\n    EscapeError(::escape::EscapeError),\n}","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1263}],"decl_id":null,"docs":" The error type used by this crate.\n","sig":null,"attributes":[{"value":"/ The error type used by this crate.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":71645,"byte_end":71683,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":355},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":73147,"byte_end":73153,"line_start":58,"line_end":58,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized `Result` type where the error is hard-wired to [`Error`].","sig":null,"attributes":[{"value":"/ A specialized `Result` type where the error is hard-wired to [`Error`].","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":73027,"byte_end":73102,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":73103,"byte_end":73106,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Error`]: enum.Error.html","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":73107,"byte_end":73137,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75747,"byte_end":75753,"line_start":131,"line_end":131,"column_start":9,"column_end":15},"name":"Custom","qualname":"::errors::serialize::DeError::Custom","value":"DeError::Custom(String)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Serde custom error\n","sig":null,"attributes":[{"value":"/ Serde custom error","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75716,"byte_end":75738,"line_start":130,"line_end":130,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75807,"byte_end":75810,"line_start":133,"line_end":133,"column_start":9,"column_end":12},"name":"Int","qualname":"::errors::serialize::DeError::Int","value":"DeError::Int(std::num::ParseIntError)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Cannot parse to integer\n","sig":null,"attributes":[{"value":"/ Cannot parse to integer","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75771,"byte_end":75798,"line_start":132,"line_end":132,"column_start":9,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75879,"byte_end":75884,"line_start":135,"line_end":135,"column_start":9,"column_end":14},"name":"Float","qualname":"::errors::serialize::DeError::Float","value":"DeError::Float(std::num::ParseFloatError)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Cannot parse to float\n","sig":null,"attributes":[{"value":"/ Cannot parse to float","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75845,"byte_end":75870,"line_start":134,"line_end":134,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75951,"byte_end":75954,"line_start":137,"line_end":137,"column_start":9,"column_end":12},"name":"Xml","qualname":"::errors::serialize::DeError::Xml","value":"DeError::Xml(Error)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Xml parsing error\n","sig":null,"attributes":[{"value":"/ Xml parsing error","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75921,"byte_end":75942,"line_start":136,"line_end":136,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76012,"byte_end":76027,"line_start":139,"line_end":139,"column_start":9,"column_end":24},"name":"EndOfAttributes","qualname":"::errors::serialize::DeError::EndOfAttributes","value":"DeError::EndOfAttributes","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Unexpected end of attributes\n","sig":null,"attributes":[{"value":"/ Unexpected end of attributes","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75971,"byte_end":76003,"line_start":138,"line_end":138,"column_start":9,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1283},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76072,"byte_end":76075,"line_start":141,"line_end":141,"column_start":9,"column_end":12},"name":"Eof","qualname":"::errors::serialize::DeError::Eof","value":"DeError::Eof","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Unexpected end of file\n","sig":null,"attributes":[{"value":"/ Unexpected end of file","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76037,"byte_end":76063,"line_start":140,"line_end":140,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1285},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76125,"byte_end":76139,"line_start":143,"line_end":143,"column_start":9,"column_end":23},"name":"InvalidBoolean","qualname":"::errors::serialize::DeError::InvalidBoolean","value":"DeError::InvalidBoolean(String)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Invalid value for a boolean\n","sig":null,"attributes":[{"value":"/ Invalid value for a boolean","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76085,"byte_end":76116,"line_start":142,"line_end":142,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76188,"byte_end":76199,"line_start":145,"line_end":145,"column_start":9,"column_end":20},"name":"InvalidUnit","qualname":"::errors::serialize::DeError::InvalidUnit","value":"DeError::InvalidUnit(String)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Invalid unit value\n","sig":null,"attributes":[{"value":"/ Invalid unit value","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76157,"byte_end":76179,"line_start":144,"line_end":144,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76252,"byte_end":76263,"line_start":147,"line_end":147,"column_start":9,"column_end":20},"name":"InvalidEnum","qualname":"::errors::serialize::DeError::InvalidEnum","value":"DeError::InvalidEnum(crate::events::Event)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Invalid event for Enum\n","sig":null,"attributes":[{"value":"/ Invalid event for Enum","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76217,"byte_end":76243,"line_start":146,"line_end":146,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76337,"byte_end":76341,"line_start":149,"line_end":149,"column_start":9,"column_end":13},"name":"Text","qualname":"::errors::serialize::DeError::Text","value":"DeError::Text","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Expecting Text event\n","sig":null,"attributes":[{"value":"/ Expecting Text event","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76304,"byte_end":76328,"line_start":148,"line_end":148,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1296},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76385,"byte_end":76390,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"name":"Start","qualname":"::errors::serialize::DeError::Start","value":"DeError::Start","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Expecting Start event\n","sig":null,"attributes":[{"value":"/ Expecting Start event","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76351,"byte_end":76376,"line_start":150,"line_end":150,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76432,"byte_end":76435,"line_start":153,"line_end":153,"column_start":9,"column_end":12},"name":"End","qualname":"::errors::serialize::DeError::End","value":"DeError::End","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Expecting End event\n","sig":null,"attributes":[{"value":"/ Expecting End event","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76400,"byte_end":76423,"line_start":152,"line_end":152,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76479,"byte_end":76490,"line_start":155,"line_end":155,"column_start":9,"column_end":20},"name":"Unsupported","qualname":"::errors::serialize::DeError::Unsupported","value":"DeError::Unsupported(&'static str)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" Unsupported operation\n","sig":null,"attributes":[{"value":"/ Unsupported operation","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76445,"byte_end":76470,"line_start":154,"line_end":154,"column_start":9,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":1268},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75698,"byte_end":75705,"line_start":129,"line_end":129,"column_start":14,"column_end":21},"name":"DeError","qualname":"::errors::serialize::DeError","value":"pub enum DeError {\n    Custom(String),\n    Int(std::num::ParseIntError),\n    Float(std::num::ParseFloatError),\n    Xml(Error),\n    EndOfAttributes,\n    Eof,\n    InvalidBoolean(String),\n    InvalidUnit(String),\n    InvalidEnum(crate::events::Event),\n    Text,\n    Start,\n    End,\n    Unsupported(&'static str),\n}","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300}],"decl_id":null,"docs":" (De)serialization error\n","sig":null,"attributes":[{"value":"/ (De)serialization error","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75636,"byte_end":75663,"line_start":127,"line_end":127,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1306},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79034,"byte_end":79048,"line_start":10,"line_end":10,"column_start":5,"column_end":19},"name":"EntityWithNull","qualname":"::escapei::EscapeError::EntityWithNull","value":"EscapeError::EntityWithNull(::std::ops::Range<usize>)","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Entity with Null character\n","sig":null,"attributes":[{"value":"/ Entity with Null character","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":78999,"byte_end":79029,"line_start":9,"line_end":9,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79115,"byte_end":79133,"line_start":12,"line_end":12,"column_start":5,"column_end":23},"name":"UnrecognizedSymbol","qualname":"::escapei::EscapeError::UnrecognizedSymbol","value":"EscapeError::UnrecognizedSymbol(::std::ops::Range<usize>, ::std::result::Result<String, ::std::string::FromUtf8Error>)","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Unrecognized escape symbol\n","sig":null,"attributes":[{"value":"/ Unrecognized escape symbol","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79080,"byte_end":79110,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79283,"byte_end":79301,"line_start":17,"line_end":17,"column_start":5,"column_end":23},"name":"UnterminatedEntity","qualname":"::escapei::EscapeError::UnterminatedEntity","value":"EscapeError::UnterminatedEntity(::std::ops::Range<usize>)","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Cannot find `;` after `&`\n","sig":null,"attributes":[{"value":"/ Cannot find `;` after `&`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79249,"byte_end":79278,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79369,"byte_end":79387,"line_start":19,"line_end":19,"column_start":5,"column_end":23},"name":"TooLongHexadecimal","qualname":"::escapei::EscapeError::TooLongHexadecimal","value":"EscapeError::TooLongHexadecimal","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Cannot convert Hexa to utf8\n","sig":null,"attributes":[{"value":"/ Cannot convert Hexa to utf8","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79333,"byte_end":79364,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1318},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79444,"byte_end":79462,"line_start":21,"line_end":21,"column_start":5,"column_end":23},"name":"InvalidHexadecimal","qualname":"::escapei::EscapeError::InvalidHexadecimal","value":"EscapeError::InvalidHexadecimal(char)","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Character is not a valid hexadecimal value\n","sig":null,"attributes":[{"value":"/ Character is not a valid hexadecimal value","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79393,"byte_end":79439,"line_start":20,"line_end":20,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1321},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79513,"byte_end":79527,"line_start":23,"line_end":23,"column_start":5,"column_end":19},"name":"TooLongDecimal","qualname":"::escapei::EscapeError::TooLongDecimal","value":"EscapeError::TooLongDecimal","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Cannot convert decimal to hexa\n","sig":null,"attributes":[{"value":"/ Cannot convert decimal to hexa","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79474,"byte_end":79508,"line_start":22,"line_end":22,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1323},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79580,"byte_end":79594,"line_start":25,"line_end":25,"column_start":5,"column_end":19},"name":"InvalidDecimal","qualname":"::escapei::EscapeError::InvalidDecimal","value":"EscapeError::InvalidDecimal(char)","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Character is not a valid decimal value\n","sig":null,"attributes":[{"value":"/ Character is not a valid decimal value","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79533,"byte_end":79575,"line_start":24,"line_end":24,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1305},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":78981,"byte_end":78992,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"EscapeError","qualname":"::escapei::EscapeError","value":"pub enum EscapeError {\n    EntityWithNull(::std::ops::Range<usize>),\n    UnrecognizedSymbol(::std::ops::Range<usize>,\n                       ::std::result::Result<String,\n                                             ::std::string::FromUtf8Error>),\n    UnterminatedEntity(::std::ops::Range<usize>),\n    TooLongHexadecimal,\n    InvalidHexadecimal(char),\n    TooLongDecimal,\n    InvalidDecimal(char),\n}","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1323}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":81269,"byte_end":81275,"line_start":69,"line_end":69,"column_start":8,"column_end":14},"name":"escape","qualname":"::escapei::escape","value":"pub fn escape(&[u8]) -> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Escapes a `&[u8]` and replaces all xml special characters (<, >, &, ', \") with their\n corresponding xml escaped value.\n","sig":null,"attributes":[{"value":"/ Escapes a `&[u8]` and replaces all xml special characters (<, >, &, ', \") with their","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":81136,"byte_end":81224,"line_start":67,"line_end":67,"column_start":1,"column_end":89}},{"value":"/ corresponding xml escaped value.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":81225,"byte_end":81261,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82608,"byte_end":82616,"line_start":110,"line_end":110,"column_start":8,"column_end":16},"name":"unescape","qualname":"::escapei::unescape","value":"pub fn unescape(&[u8]) -> Result<Cow<, [u8]>, EscapeError>","parent":null,"children":[],"decl_id":null,"docs":" Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding\n value\n","sig":null,"attributes":[{"value":"/ Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82493,"byte_end":82590,"line_start":108,"line_end":108,"column_start":1,"column_end":98}},{"value":"/ value","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82591,"byte_end":82600,"line_start":109,"line_end":109,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":408},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82954,"byte_end":82967,"line_start":120,"line_end":120,"column_start":8,"column_end":21},"name":"unescape_with","qualname":"::escapei::unescape_with","value":"pub fn unescape_with<'a>(&'a [u8], &HashMap<Vec<u8>, Vec<u8>>)\n-> Result<Cow, EscapeError>","parent":null,"children":[],"decl_id":null,"docs":" Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding\n value, using a dictionnary of custom entities.","sig":null,"attributes":[{"value":"/ Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82695,"byte_end":82792,"line_start":114,"line_end":114,"column_start":1,"column_end":98}},{"value":"/ value, using a dictionnary of custom entities.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82793,"byte_end":82843,"line_start":115,"line_end":115,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82844,"byte_end":82847,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Pre-condition","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82848,"byte_end":82867,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82868,"byte_end":82871,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":82872,"byte_end":82946,"line_start":119,"line_end":119,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":417},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4500,"byte_end":4506,"line_start":127,"line_end":127,"column_start":9,"column_end":15},"name":"escape","qualname":"::escape","value":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432}],"decl_id":null,"docs":" Manage xml character escapes\n","sig":null,"attributes":[{"value":"/ Manage xml character escapes","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4513,"byte_end":4545,"line_start":128,"line_end":128,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":435},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::events","value":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":1351},{"krate":0,"index":1355},{"krate":0,"index":565},{"krate":0,"index":606},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":612},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":620},{"krate":0,"index":628},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":634},{"krate":0,"index":664},{"krate":0,"index":1379},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":677},{"krate":0,"index":681},{"krate":0,"index":685},{"krate":0,"index":689},{"krate":0,"index":693}],"decl_id":null,"docs":" Defines zero-copy XML events used throughout this library.\n","sig":null,"attributes":[{"value":"/ Defines zero-copy XML events used throughout this library.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":302428,"byte_end":302490,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":436},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attributes","qualname":"::events::attributes","value":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":1328},{"krate":0,"index":1335},{"krate":0,"index":470},{"krate":0,"index":1338},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":475},{"krate":0,"index":494},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506}],"decl_id":null,"docs":" Xml Attributes module","sig":null,"attributes":[{"value":"/ Xml Attributes module","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333296,"byte_end":333321,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333322,"byte_end":333325,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Provides an iterator over attributes key/value pairs","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333326,"byte_end":333382,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1328},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333878,"byte_end":333888,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::events::attributes::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334}],"decl_id":null,"docs":" Iterator over XML attributes.","sig":null,"attributes":[{"value":"/ Iterator over XML attributes.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333582,"byte_end":333615,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333616,"byte_end":333619,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Yields `Result<Attribute>`. An `Err` will be yielded if an attribute is malformed or duplicated.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333620,"byte_end":333720,"line_start":15,"line_end":15,"column_start":1,"column_end":101}},{"value":"/ The duplicate check can be turned off by calling [`with_checks(false)`].","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333721,"byte_end":333797,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333798,"byte_end":333801,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`with_checks(false)`]: #method.with_checks","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":333802,"byte_end":333849,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":334426,"byte_end":334429,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"pub fn new(&'a [u8], usize) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new attribute iterator from a buffer.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":334363,"byte_end":334414,"line_start":35,"line_end":35,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":334755,"byte_end":334759,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"html","qualname":"<Attributes>::html","value":"pub fn html(&'a [u8], usize) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer, allowing HTML attribute syntax.\n","sig":null,"attributes":[{"value":"/ Creates a new attribute iterator from a buffer, allowing HTML attribute syntax.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":334660,"byte_end":334743,"line_start":46,"line_end":46,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335265,"byte_end":335276,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"with_checks","qualname":"<Attributes>::with_checks","value":"pub fn with_checks(&mut Self, bool) -> &mut Attributes","parent":null,"children":[],"decl_id":null,"docs":" Changes whether attributes should be checked for uniqueness.","sig":null,"attributes":[{"value":"/ Changes whether attributes should be checked for uniqueness.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":334989,"byte_end":335053,"line_start":57,"line_end":57,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335058,"byte_end":335061,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The XML specification requires attribute keys in the same element to be unique. This check","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335066,"byte_end":335160,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ can be disabled to improve performance slightly.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335165,"byte_end":335217,"line_start":60,"line_end":60,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335222,"byte_end":335225,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335230,"byte_end":335253,"line_start":62,"line_end":62,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1338},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335808,"byte_end":335817,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::events::attributes::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341}],"decl_id":null,"docs":" A struct representing a key/value XML attribute.","sig":null,"attributes":[{"value":"/ A struct representing a key/value XML attribute.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335378,"byte_end":335430,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335431,"byte_end":335434,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Field `value` stores raw bytes, possibly containing escape-sequences. Most users will likely","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335435,"byte_end":335531,"line_start":71,"line_end":71,"column_start":1,"column_end":97}},{"value":"/ want to access the value using one of the [`unescaped_value`] and [`unescape_and_decode_value`]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335532,"byte_end":335631,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ functions.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335632,"byte_end":335646,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335647,"byte_end":335650,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`unescaped_value`]: #method.unescaped_value","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335651,"byte_end":335699,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/ [`unescape_and_decode_value`]: #method.unescape_and_decode_value","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335700,"byte_end":335768,"line_start":76,"line_end":76,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1340},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336060,"byte_end":336063,"line_start":84,"line_end":84,"column_start":9,"column_end":12},"name":"key","qualname":"::events::attributes::Attribute::key","value":"&'a [u8]","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":" The key to uniquely define the attribute.","sig":null,"attributes":[{"value":"/ The key to uniquely define the attribute.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335828,"byte_end":335873,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335878,"byte_end":335881,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ If [`Attributes::with_checks`] is turned off, the key might not be unique.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335886,"byte_end":335964,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335969,"byte_end":335972,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [`Attributes::with_checks`]: struct.Attributes.html#method.with_checks","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":335977,"byte_end":336051,"line_start":83,"line_end":83,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1341},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336123,"byte_end":336128,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"value","qualname":"::events::attributes::Attribute::value","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":1338},"children":[],"decl_id":null,"docs":" The raw value of the attribute.\n","sig":null,"attributes":[{"value":"/ The raw value of the attribute.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336079,"byte_end":336114,"line_start":85,"line_end":85,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336579,"byte_end":336594,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"unescaped_value","qualname":"<Attribute>::unescaped_value","value":"pub fn unescaped_value(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped value.","sig":null,"attributes":[{"value":"/ Returns the unescaped value.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336177,"byte_end":336209,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336214,"byte_end":336217,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This is normally the value you are interested in. Escape sequences such as `&gt;` are","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336222,"byte_end":336311,"line_start":92,"line_end":92,"column_start":5,"column_end":94}},{"value":"/ replaced with their unescaped equivalents such as `>`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336316,"byte_end":336374,"line_start":93,"line_end":93,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336379,"byte_end":336382,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This will allocate if the value contains any escape sequences.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336387,"byte_end":336453,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336458,"byte_end":336461,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped_value_with_custom_entities()`](#method.unescaped_value_with_custom_entities)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336466,"byte_end":336567,"line_start":97,"line_end":97,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337244,"byte_end":337280,"line_start":115,"line_end":115,"column_start":12,"column_end":48},"name":"unescaped_value_with_custom_entities","qualname":"<Attribute>::unescaped_value_with_custom_entities","value":"pub fn unescaped_value_with_custom_entities(&Self, &HashMap<Vec<u8>, Vec<u8>>)\n-> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped value, using custom entities.","sig":null,"attributes":[{"value":"/ Returns the unescaped value, using custom entities.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336676,"byte_end":336731,"line_start":102,"line_end":102,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336736,"byte_end":336739,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This is normally the value you are interested in. Escape sequences such as `&gt;` are","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336744,"byte_end":336833,"line_start":104,"line_end":104,"column_start":5,"column_end":94}},{"value":"/ replaced with their unescaped equivalents such as `>`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336838,"byte_end":336896,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"/ Additional entities can be provided in `custom_entities`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336901,"byte_end":336962,"line_start":106,"line_end":106,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336967,"byte_end":336970,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This will allocate if the value contains any escape sequences.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336975,"byte_end":337041,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337046,"byte_end":337049,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped_value()`](#method.unescaped_value)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337054,"byte_end":337113,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337118,"byte_end":337121,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337126,"byte_end":337145,"line_start":112,"line_end":112,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337150,"byte_end":337153,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337158,"byte_end":337232,"line_start":114,"line_end":114,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338190,"byte_end":338215,"line_start":139,"line_end":139,"column_start":12,"column_end":37},"name":"unescape_and_decode_value","qualname":"<Attribute>::unescape_and_decode_value","value":"pub fn unescape_and_decode_value<B: BufRead>(&Self, &Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Decode then unescapes the value","sig":null,"attributes":[{"value":"/ Decode then unescapes the value","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337667,"byte_end":337702,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337707,"byte_end":337710,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337715,"byte_end":337811,"line_start":131,"line_end":131,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337816,"byte_end":337839,"line_start":132,"line_end":132,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337844,"byte_end":337847,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337852,"byte_end":337948,"line_start":134,"line_end":134,"column_start":5,"column_end":101}},{"value":"/ * [`unescaped_value()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":337953,"byte_end":338039,"line_start":135,"line_end":135,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338044,"byte_end":338047,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [`unescaped_value()`]: #method.unescaped_value","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338052,"byte_end":338102,"line_start":137,"line_end":137,"column_start":5,"column_end":55}},{"value":"/ [`Reader::decode()`]: ../../reader/struct.Reader.html#method.decode","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338107,"byte_end":338178,"line_start":138,"line_end":138,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":339047,"byte_end":339093,"line_start":157,"line_end":157,"column_start":12,"column_end":58},"name":"unescape_and_decode_value_with_custom_entities","qualname":"<Attribute>::unescape_and_decode_value_with_custom_entities","value":"pub fn unescape_and_decode_value_with_custom_entities<B: BufRead>(&Self,\n                                                                  &Reader<B>,\n                                                                  &HashMap<Vec<u8>,\n                                                                           Vec<u8>>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Decode then unescapes the value with custom entities","sig":null,"attributes":[{"value":"/ Decode then unescapes the value with custom entities","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338342,"byte_end":338398,"line_start":143,"line_end":143,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338403,"byte_end":338406,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338411,"byte_end":338507,"line_start":145,"line_end":145,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338512,"byte_end":338535,"line_start":146,"line_end":146,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338540,"byte_end":338543,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338548,"byte_end":338644,"line_start":148,"line_end":148,"column_start":5,"column_end":101}},{"value":"/ * [`unescaped_value()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338649,"byte_end":338735,"line_start":149,"line_end":149,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338740,"byte_end":338743,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`unescaped_value_with_custom_entities()`]: #method.unescaped_value_with_custom_entities","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338748,"byte_end":338840,"line_start":151,"line_end":151,"column_start":5,"column_end":97}},{"value":"/ [`Reader::decode()`]: ../../reader/struct.Reader.html#method.decode","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338845,"byte_end":338916,"line_start":152,"line_end":152,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338921,"byte_end":338924,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338929,"byte_end":338948,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338953,"byte_end":338956,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":338961,"byte_end":339035,"line_start":156,"line_end":156,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":341232,"byte_end":341263,"line_start":213,"line_end":213,"column_start":12,"column_end":43},"name":"unescape_and_decode_without_bom","qualname":"<Attribute>::unescape_and_decode_without_bom","value":"pub fn unescape_and_decode_without_bom<B: BufRead>(&Self, &Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":340884,"byte_end":340956,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":340961,"byte_end":340998,"line_start":206,"line_end":206,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":341003,"byte_end":341006,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":341011,"byte_end":341075,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":341080,"byte_end":341117,"line_start":209,"line_end":209,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":341122,"byte_end":341151,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":341156,"byte_end":341182,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":341187,"byte_end":341220,"line_start":212,"line_end":212,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342672,"byte_end":342724,"line_start":252,"line_end":252,"column_start":12,"column_end":64},"name":"unescape_and_decode_without_bom_with_custom_entities","qualname":"<Attribute>::unescape_and_decode_without_bom_with_custom_entities","value":"pub fn unescape_and_decode_without_bom_with_custom_entities<B: BufRead>(&Self,\n                                                                        &Reader<B>,\n                                                                        &HashMap<Vec<u8>,\n                                                                                 Vec<u8>>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding with custom entities\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding with custom entities","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342184,"byte_end":342277,"line_start":240,"line_end":240,"column_start":5,"column_end":98}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342282,"byte_end":342319,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342324,"byte_end":342327,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342332,"byte_end":342396,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342401,"byte_end":342438,"line_start":244,"line_end":244,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342443,"byte_end":342472,"line_start":245,"line_end":245,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342477,"byte_end":342503,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342508,"byte_end":342511,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342516,"byte_end":342535,"line_start":248,"line_end":248,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342540,"byte_end":342543,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342548,"byte_end":342622,"line_start":250,"line_end":250,"column_start":5,"column_end":79}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":342627,"byte_end":342660,"line_start":251,"line_end":251,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303281,"byte_end":303291,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"BytesStart","qualname":"::events::BytesStart","value":"BytesStart {  }","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354}],"decl_id":null,"docs":" Opening tag data (`Event::Start`), with optional attributes.","sig":null,"attributes":[{"value":"/ Opening tag data (`Event::Start`), with optional attributes.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":302839,"byte_end":302903,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":302904,"byte_end":302907,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `<name attr=\"value\">`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":302908,"byte_end":302934,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":302935,"byte_end":302938,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The name can be accessed using the [`name`], [`local_name`] or [`unescaped`] methods. An","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":302939,"byte_end":303031,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ iterator over the attributes is returned by the [`attributes`] method.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303032,"byte_end":303106,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303107,"byte_end":303110,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`name`]: #method.name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303111,"byte_end":303137,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/ [`local_name`]: #method.local_name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303138,"byte_end":303176,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/ [`unescaped`]: #method.unescaped","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303177,"byte_end":303213,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/ [`attributes`]: #method.attributes","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303214,"byte_end":303252,"line_start":30,"line_end":30,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303710,"byte_end":303718,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesStart>::borrowed","value":"pub fn borrowed(&'a [u8], usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes).","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given content (name + attributes).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303511,"byte_end":303585,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303590,"byte_end":303593,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303598,"byte_end":303611,"line_start":42,"line_end":42,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303616,"byte_end":303619,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ `&content[..name_len]` is not checked to be a valid name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303624,"byte_end":303684,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303689,"byte_end":303698,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304034,"byte_end":304047,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"borrowed_name","qualname":"<BytesStart>::borrowed_name","value":"pub fn borrowed_name(&'a [u8]) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name.","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given name.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303870,"byte_end":303921,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303926,"byte_end":303929,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303934,"byte_end":303947,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303952,"byte_end":303955,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ `&content` is not checked to be a valid name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303960,"byte_end":304008,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304013,"byte_end":304022,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304270,"byte_end":304275,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesStart>::owned","value":"pub fn owned<C: Into<Vec<u8>>>(C, usize) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes)","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given content (name + attributes)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304136,"byte_end":304209,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304214,"byte_end":304217,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Owns its contents.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304222,"byte_end":304244,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304249,"byte_end":304258,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304568,"byte_end":304578,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"owned_name","qualname":"<BytesStart>::owned_name","value":"pub fn owned_name<C: Into<Vec<u8>>>(C) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304457,"byte_end":304507,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304512,"byte_end":304515,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Owns its contents.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304520,"byte_end":304542,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304547,"byte_end":304556,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304838,"byte_end":304848,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesStart>::into_owned","value":"pub fn into_owned(Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304783,"byte_end":304826,"line_start":86,"line_end":86,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305037,"byte_end":305045,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<BytesStart>::to_owned","value":"pub fn to_owned(&Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event without taking ownership of Event\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event without taking ownership of Event","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":304949,"byte_end":305025,"line_start":91,"line_end":91,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305865,"byte_end":305876,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"to_borrowed","qualname":"<BytesStart>::to_borrowed","value":"pub fn to_borrowed(&Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into a borrowed event. Most useful when paired with [`to_end`].","sig":null,"attributes":[{"value":"/ Converts the event into a borrowed event. Most useful when paired with [`to_end`].","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305145,"byte_end":305231,"line_start":96,"line_end":96,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305236,"byte_end":305239,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305244,"byte_end":305257,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305262,"byte_end":305265,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305270,"byte_end":305277,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use quick_xml::{Error, Writer};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305282,"byte_end":305319,"line_start":101,"line_end":101,"column_start":5,"column_end":42}},{"value":"/ use quick_xml::events::{BytesStart, Event};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305324,"byte_end":305371,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305376,"byte_end":305379,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ struct SomeStruct<'a> {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305384,"byte_end":305411,"line_start":104,"line_end":104,"column_start":5,"column_end":32}},{"value":"/     attrs: BytesStart<'a>,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305416,"byte_end":305446,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305451,"byte_end":305465,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305470,"byte_end":305475,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # impl<'a> SomeStruct<'a> {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305480,"byte_end":305511,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/ # fn example(&self) -> Result<(), Error> {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305516,"byte_end":305562,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/ # let mut writer = Writer::new(Vec::new());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305567,"byte_end":305614,"line_start":110,"line_end":110,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305619,"byte_end":305622,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ writer.write_event(Event::Start(self.attrs.to_borrowed()))?;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305627,"byte_end":305691,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/ // ...","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305696,"byte_end":305706,"line_start":113,"line_end":113,"column_start":5,"column_end":15}},{"value":"/ writer.write_event(Event::End(self.attrs.to_end()))?;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305711,"byte_end":305768,"line_start":114,"line_end":114,"column_start":5,"column_end":62}},{"value":"/ # Ok(())","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305773,"byte_end":305785,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/ # }}","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305790,"byte_end":305798,"line_start":116,"line_end":116,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305803,"byte_end":305810,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305815,"byte_end":305818,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`to_end`]: #method.to_end","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305823,"byte_end":305853,"line_start":119,"line_end":119,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306010,"byte_end":306016,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"to_end","qualname":"<BytesStart>::to_end","value":"pub fn to_end(&Self) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates new paired close tag\n","sig":null,"attributes":[{"value":"/ Creates new paired close tag","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":305966,"byte_end":305998,"line_start":124,"line_end":124,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306344,"byte_end":306359,"line_start":134,"line_end":134,"column_start":12,"column_end":27},"name":"with_attributes","qualname":"<BytesStart>::with_attributes","value":"pub fn with_attributes<'b, I>(Self, I) -> Self where I: IntoIterator,\nI::Item: Into<Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and yield a new `BytesStart` with additional attributes from an iterator.","sig":null,"attributes":[{"value":"/ Consumes `self` and yield a new `BytesStart` with additional attributes from an iterator.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306089,"byte_end":306182,"line_start":129,"line_end":129,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306187,"byte_end":306190,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The yielded items must be convertible to [`Attribute`] using `Into`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306195,"byte_end":306267,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306272,"byte_end":306275,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: attributes/struct.Attributes.html","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306280,"byte_end":306332,"line_start":133,"line_end":133,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306622,"byte_end":306626,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesStart>::name","value":"pub fn name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw tag name as a `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Gets the undecoded raw tag name as a `&[u8]`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306547,"byte_end":306596,"line_start":143,"line_end":143,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306601,"byte_end":306610,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306896,"byte_end":306906,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesStart>::local_name","value":"pub fn local_name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw local tag name (excluding namespace) as a `&[u8]`.","sig":null,"attributes":[{"value":"/ Gets the undecoded raw local tag name (excluding namespace) as a `&[u8]`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306691,"byte_end":306768,"line_start":149,"line_end":149,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306773,"byte_end":306776,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ All content up to and including the first `:` character is removed from the tag name.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306781,"byte_end":306870,"line_start":151,"line_end":151,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":306875,"byte_end":306884,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307314,"byte_end":307323,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesStart>::unescaped","value":"pub fn unescaped(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the unescaped tag name.","sig":null,"attributes":[{"value":"/ Gets the unescaped tag name.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307036,"byte_end":307068,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307073,"byte_end":307076,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ XML escape sequences like \"`&lt;`\" will be replaced by their unescaped characters like","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307081,"byte_end":307171,"line_start":160,"line_end":160,"column_start":5,"column_end":95}},{"value":"/ \"`<`\".","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307176,"byte_end":307186,"line_start":161,"line_end":161,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307191,"byte_end":307194,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped_with_custom_entities()`](#method.unescaped_with_custom_entities)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307199,"byte_end":307288,"line_start":163,"line_end":163,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307293,"byte_end":307302,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307843,"byte_end":307873,"line_start":181,"line_end":181,"column_start":12,"column_end":42},"name":"unescaped_with_custom_entities","qualname":"<BytesStart>::unescaped_with_custom_entities","value":"pub fn unescaped_with_custom_entities<'s>(&'s Self,\n                                          &HashMap<Vec<u8>, Vec<u8>>)\n-> Result<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Gets the unescaped tag name, using custom entities.","sig":null,"attributes":[{"value":"/ Gets the unescaped tag name, using custom entities.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307399,"byte_end":307454,"line_start":169,"line_end":169,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307459,"byte_end":307462,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ XML escape sequences like \"`&lt;`\" will be replaced by their unescaped characters like","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307467,"byte_end":307557,"line_start":171,"line_end":171,"column_start":5,"column_end":95}},{"value":"/ \"`<`\".","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307562,"byte_end":307572,"line_start":172,"line_end":172,"column_start":5,"column_end":15}},{"value":"/ Additional entities can be provided in `custom_entities`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307577,"byte_end":307638,"line_start":173,"line_end":173,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307643,"byte_end":307646,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307651,"byte_end":307670,"line_start":175,"line_end":175,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307675,"byte_end":307678,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307683,"byte_end":307757,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307762,"byte_end":307765,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped()`](#method.unescaped)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307770,"byte_end":307817,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":307822,"byte_end":307831,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308350,"byte_end":308360,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"attributes","qualname":"<BytesStart>::attributes","value":"pub fn attributes(&Self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the attributes of this tag.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the attributes of this tag.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308282,"byte_end":308338,"line_start":196,"line_end":196,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308547,"byte_end":308562,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"html_attributes","qualname":"<BytesStart>::html_attributes","value":"pub fn html_attributes(&Self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the HTML-like attributes of this tag (no mandatory quotes or `=`).\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the HTML-like attributes of this tag (no mandatory quotes or `=`).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308440,"byte_end":308535,"line_start":201,"line_end":201,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308817,"byte_end":308831,"line_start":209,"line_end":209,"column_start":12,"column_end":26},"name":"attributes_raw","qualname":"<BytesStart>::attributes_raw","value":"pub fn attributes_raw(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw string with the attributes of this tag as a `&[u8]`,\n including the whitespace after the tag name if there is any.\n","sig":null,"attributes":[{"value":"/ Gets the undecoded raw string with the attributes of this tag as a `&[u8]`,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308643,"byte_end":308722,"line_start":206,"line_end":206,"column_start":5,"column_end":84}},{"value":"/ including the whitespace after the tag name if there is any.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308727,"byte_end":308791,"line_start":207,"line_end":207,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308796,"byte_end":308805,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309118,"byte_end":309135,"line_start":218,"line_end":218,"column_start":12,"column_end":29},"name":"extend_attributes","qualname":"<BytesStart>::extend_attributes","value":"pub fn extend_attributes<'b, I>(&mut Self, I) -> &mut BytesStart where\nI: IntoIterator, I::Item: Into<Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attributes to this tag using an iterator.","sig":null,"attributes":[{"value":"/ Add additional attributes to this tag using an iterator.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308896,"byte_end":308956,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308961,"byte_end":308964,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The yielded items must be convertible to [`Attribute`] using `Into`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":308969,"byte_end":309041,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309046,"byte_end":309049,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: attributes/struct.Attributes.html","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309054,"byte_end":309106,"line_start":217,"line_end":217,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309909,"byte_end":309928,"line_start":240,"line_end":240,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesStart>::unescape_and_decode","value":"pub fn unescape_and_decode<B: BufRead>(&Self, &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped and decoded string value.","sig":null,"attributes":[{"value":"/ Returns the unescaped and decoded string value.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309377,"byte_end":309428,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309433,"byte_end":309436,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309441,"byte_end":309537,"line_start":231,"line_end":231,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309542,"byte_end":309565,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309570,"byte_end":309573,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ * [`unescaped()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309578,"byte_end":309658,"line_start":234,"line_end":234,"column_start":5,"column_end":85}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309663,"byte_end":309759,"line_start":235,"line_end":235,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309764,"byte_end":309767,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`unescaped()`]: #method.unescaped","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309772,"byte_end":309810,"line_start":237,"line_end":237,"column_start":5,"column_end":43}},{"value":"/ [`Reader::decode()`]: ../reader/struct.Reader.html#method.decode","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309815,"byte_end":309883,"line_start":238,"line_end":238,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":309888,"byte_end":309897,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310805,"byte_end":310845,"line_start":259,"line_end":259,"column_start":12,"column_end":52},"name":"unescape_and_decode_with_custom_entities","qualname":"<BytesStart>::unescape_and_decode_with_custom_entities","value":"pub fn unescape_and_decode_with_custom_entities<B: BufRead>(&Self, &Reader<B>,\n                                                            &HashMap<Vec<u8>,\n                                                                     Vec<u8>>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped and decoded string value with custom entities.","sig":null,"attributes":[{"value":"/ Returns the unescaped and decoded string value with custom entities.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310070,"byte_end":310142,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310147,"byte_end":310150,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310155,"byte_end":310251,"line_start":246,"line_end":246,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310256,"byte_end":310279,"line_start":247,"line_end":247,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310284,"byte_end":310287,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ * [`unescaped_with_custom_entities()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310292,"byte_end":310393,"line_start":249,"line_end":249,"column_start":5,"column_end":106}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310398,"byte_end":310494,"line_start":250,"line_end":250,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310499,"byte_end":310502,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`unescaped_with_custom_entities()`]: #method.unescaped_with_custom_entities","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310507,"byte_end":310587,"line_start":252,"line_end":252,"column_start":5,"column_end":85}},{"value":"/ [`Reader::decode()`]: ../reader/struct.Reader.html#method.decode","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310592,"byte_end":310660,"line_start":253,"line_end":253,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310665,"byte_end":310668,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310673,"byte_end":310692,"line_start":255,"line_end":255,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310697,"byte_end":310700,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310705,"byte_end":310779,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":310784,"byte_end":310793,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312134,"byte_end":312148,"line_start":294,"line_end":294,"column_start":12,"column_end":26},"name":"push_attribute","qualname":"<BytesStart>::push_attribute","value":"pub fn push_attribute<'b, A: Into<Attribute>>(&mut Self, A)","parent":null,"children":[],"decl_id":null,"docs":" Adds an attribute to this element.\n","sig":null,"attributes":[{"value":"/ Adds an attribute to this element.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312084,"byte_end":312122,"line_start":293,"line_end":293,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312594,"byte_end":312602,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"set_name","qualname":"<BytesStart>::set_name","value":"pub fn set_name(&mut Self, &[u8]) -> &mut BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Edit the name of the BytesStart in-place","sig":null,"attributes":[{"value":"/ Edit the name of the BytesStart in-place","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312455,"byte_end":312499,"line_start":304,"line_end":304,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312504,"byte_end":312507,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312512,"byte_end":312525,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312530,"byte_end":312533,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ `name` is not checked to be a valid name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312538,"byte_end":312582,"line_start":308,"line_end":308,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312868,"byte_end":312884,"line_start":317,"line_end":317,"column_start":12,"column_end":28},"name":"clear_attributes","qualname":"<BytesStart>::clear_attributes","value":"pub fn clear_attributes(&mut Self) -> &mut BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Remove all attributes from the ByteStart\n","sig":null,"attributes":[{"value":"/ Remove all attributes from the ByteStart","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":312812,"byte_end":312856,"line_start":316,"line_end":316,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1358},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313477,"byte_end":313486,"line_start":337,"line_end":337,"column_start":12,"column_end":21},"name":"BytesDecl","qualname":"::events::BytesDecl","value":"BytesDecl {  }","parent":null,"children":[{"krate":0,"index":1360}],"decl_id":null,"docs":" An XML declaration (`Event::Decl`).","sig":null,"attributes":[{"value":"/ An XML declaration (`Event::Decl`).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313303,"byte_end":313342,"line_start":333,"line_end":333,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313343,"byte_end":313346,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ [W3C XML 1.1 Prolog and Document Type Declaration](http://w3.org/TR/xml11/#sec-prolog-dtd)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313347,"byte_end":313441,"line_start":335,"line_end":335,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313611,"byte_end":313621,"line_start":343,"line_end":343,"column_start":12,"column_end":22},"name":"from_start","qualname":"<BytesDecl>::from_start","value":"pub fn from_start(BytesStart) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BytesDecl` from a `BytesStart`\n","sig":null,"attributes":[{"value":"/ Creates a `BytesDecl` from a `BytesStart`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313554,"byte_end":313599,"line_start":342,"line_end":342,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313771,"byte_end":313778,"line_start":348,"line_end":348,"column_start":12,"column_end":19},"name":"version","qualname":"<BytesDecl>::version","value":"pub fn version(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml version, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml version, including quotes (' or \")","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313712,"byte_end":313759,"line_start":347,"line_end":347,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":314408,"byte_end":314416,"line_start":365,"line_end":365,"column_start":12,"column_end":20},"name":"encoding","qualname":"<BytesDecl>::encoding","value":"pub fn encoding(&Self) -> Option<Result<Cow<, [u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml encoding, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml encoding, including quotes (' or \")","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":314348,"byte_end":314396,"line_start":364,"line_end":364,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":314845,"byte_end":314855,"line_start":380,"line_end":380,"column_start":12,"column_end":22},"name":"standalone","qualname":"<BytesDecl>::standalone","value":"pub fn standalone(&Self) -> Option<Result<Cow<, [u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml standalone, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml standalone, including quotes (' or \")","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":314783,"byte_end":314833,"line_start":379,"line_end":379,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":315728,"byte_end":315731,"line_start":401,"line_end":401,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesDecl>::new","value":"pub fn new(&[u8], Option<&[u8]>, Option<&[u8]>) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `XmlDecl` from the (mandatory) _version_ (should be `1.0` or `1.1`),\n the optional _encoding_ (e.g., `UTF-8`) and the optional _standalone_ (`yes` or `no`)\n attribute.","sig":null,"attributes":[{"value":"/ Constructs a new `XmlDecl` from the (mandatory) _version_ (should be `1.0` or `1.1`),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":315224,"byte_end":315313,"line_start":394,"line_end":394,"column_start":5,"column_end":94}},{"value":"/ the optional _encoding_ (e.g., `UTF-8`) and the optional _standalone_ (`yes` or `no`)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":315318,"byte_end":315407,"line_start":395,"line_end":395,"column_start":5,"column_end":94}},{"value":"/ attribute.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":315412,"byte_end":315426,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":315431,"byte_end":315434,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Does not escape any of its inputs. Always uses double quotes to wrap the attribute values.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":315439,"byte_end":315533,"line_start":398,"line_end":398,"column_start":5,"column_end":99}},{"value":"/ The caller is responsible for escaping attribute values. Shouldn't usually be relevant since","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":315538,"byte_end":315634,"line_start":399,"line_end":399,"column_start":5,"column_end":101}},{"value":"/ the double quote character is not allowed in any of the attribute values.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":315639,"byte_end":315716,"line_start":400,"line_end":400,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317208,"byte_end":317218,"line_start":450,"line_end":450,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesDecl>::into_owned","value":"pub fn into_owned(Self) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317153,"byte_end":317196,"line_start":449,"line_end":449,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1367},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317407,"byte_end":317415,"line_start":459,"line_end":459,"column_start":12,"column_end":20},"name":"BytesEnd","qualname":"::events::BytesEnd","value":"BytesEnd {  }","parent":null,"children":[{"krate":0,"index":1369}],"decl_id":null,"docs":" A struct to manage `Event::End` events\n","sig":null,"attributes":[{"value":"/ A struct to manage `Event::End` events","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317336,"byte_end":317378,"line_start":457,"line_end":457,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317550,"byte_end":317558,"line_start":466,"line_end":466,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesEnd>::borrowed","value":"pub fn borrowed(&'a [u8]) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` borrowing a slice\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesEnd` borrowing a slice","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317478,"byte_end":317524,"line_start":464,"line_end":464,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317529,"byte_end":317538,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317742,"byte_end":317747,"line_start":474,"line_end":474,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesEnd>::owned","value":"pub fn owned(Vec<u8>) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` owning its name\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesEnd` owning its name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317672,"byte_end":317716,"line_start":472,"line_end":472,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317721,"byte_end":317730,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317917,"byte_end":317927,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesEnd>::into_owned","value":"pub fn into_owned(Self) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317862,"byte_end":317905,"line_start":480,"line_end":480,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318107,"byte_end":318111,"line_start":489,"line_end":489,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesEnd>::name","value":"pub fn name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets `BytesEnd` event name\n","sig":null,"attributes":[{"value":"/ Gets `BytesEnd` event name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318051,"byte_end":318081,"line_start":487,"line_end":487,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318086,"byte_end":318095,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318390,"byte_end":318400,"line_start":497,"line_end":497,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesEnd>::local_name","value":"pub fn local_name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" local name (excluding namespace) as &[u8] (without eventual attributes)\n returns the name() with any leading namespace removed (all content up to\n and including the first ':' character)\n","sig":null,"attributes":[{"value":"/ local name (excluding namespace) as &[u8] (without eventual attributes)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318161,"byte_end":318236,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ returns the name() with any leading namespace removed (all content up to","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318241,"byte_end":318317,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/ and including the first ':' character)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318322,"byte_end":318364,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318369,"byte_end":318378,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318950,"byte_end":318959,"line_start":518,"line_end":518,"column_start":12,"column_end":21},"name":"BytesText","qualname":"::events::BytesText","value":"BytesText {  }","parent":null,"children":[{"krate":0,"index":1375}],"decl_id":null,"docs":" Data from various events (most notably, `Event::Text`).\n","sig":null,"attributes":[{"value":"/ Data from various events (most notably, `Event::Text`).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318862,"byte_end":318921,"line_start":516,"line_end":516,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319161,"byte_end":319173,"line_start":526,"line_end":526,"column_start":12,"column_end":24},"name":"from_escaped","qualname":"<BytesText>::from_escaped","value":"pub fn from_escaped<C: Into<Cow>>(C) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped byte sequence.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from an escaped byte sequence.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319075,"byte_end":319135,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319140,"byte_end":319149,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319441,"byte_end":319451,"line_start":535,"line_end":535,"column_start":12,"column_end":22},"name":"from_plain","qualname":"<BytesText>::from_plain","value":"pub fn from_plain(&'a [u8]) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a byte sequence. The byte sequence is\n expected not to be escaped.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from a byte sequence. The byte sequence is","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319307,"byte_end":319379,"line_start":532,"line_end":532,"column_start":5,"column_end":77}},{"value":"/ expected not to be escaped.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319384,"byte_end":319415,"line_start":533,"line_end":533,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319420,"byte_end":319429,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319648,"byte_end":319664,"line_start":543,"line_end":543,"column_start":12,"column_end":28},"name":"from_escaped_str","qualname":"<BytesText>::from_escaped_str","value":"pub fn from_escaped_str<C: Into<Cow>>(C) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped string.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from an escaped string.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319569,"byte_end":319622,"line_start":541,"line_end":541,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319627,"byte_end":319636,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320029,"byte_end":320043,"line_start":553,"line_end":553,"column_start":12,"column_end":26},"name":"from_plain_str","qualname":"<BytesText>::from_plain_str","value":"pub fn from_plain_str(&'a str) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a string. The string is expected not to\n be escaped.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from a string. The string is expected not to","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319909,"byte_end":319983,"line_start":550,"line_end":550,"column_start":5,"column_end":79}},{"value":"/ be escaped.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319988,"byte_end":320003,"line_start":551,"line_end":551,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320008,"byte_end":320017,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320251,"byte_end":320261,"line_start":560,"line_end":560,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesText>::into_owned","value":"pub fn into_owned(Self) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Ensures that all data is owned to extend the object's lifetime if\n necessary.\n","sig":null,"attributes":[{"value":"/ Ensures that all data is owned to extend the object's lifetime if","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320137,"byte_end":320206,"line_start":557,"line_end":557,"column_start":5,"column_end":74}},{"value":"/ necessary.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320211,"byte_end":320225,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320230,"byte_end":320239,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320911,"byte_end":320920,"line_start":579,"line_end":579,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesText>::unescaped","value":"pub fn unescaped(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" gets escaped content","sig":null,"attributes":[{"value":"/ gets escaped content","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320589,"byte_end":320613,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320618,"byte_end":320621,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Searches for '&' into content and try to escape the coded character if possible","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320626,"byte_end":320709,"line_start":575,"line_end":575,"column_start":5,"column_end":88}},{"value":"/ returns Malformed error with index within element if '&' is not followed by ';'","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320714,"byte_end":320797,"line_start":576,"line_end":576,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320802,"byte_end":320805,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped_with_custom_entities()`](#method.unescaped_with_custom_entities)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320810,"byte_end":320899,"line_start":578,"line_end":578,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321482,"byte_end":321512,"line_start":594,"line_end":594,"column_start":12,"column_end":42},"name":"unescaped_with_custom_entities","qualname":"<BytesText>::unescaped_with_custom_entities","value":"pub fn unescaped_with_custom_entities<'s>(&'s Self,\n                                          &HashMap<Vec<u8>, Vec<u8>>)\n-> Result<Cow>","parent":null,"children":[],"decl_id":null,"docs":" gets escaped content with custom entities","sig":null,"attributes":[{"value":"/ gets escaped content with custom entities","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":320996,"byte_end":321041,"line_start":583,"line_end":583,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321046,"byte_end":321049,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Searches for '&' into content and try to escape the coded character if possible","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321054,"byte_end":321137,"line_start":585,"line_end":585,"column_start":5,"column_end":88}},{"value":"/ returns Malformed error with index within element if '&' is not followed by ';'","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321142,"byte_end":321225,"line_start":586,"line_end":586,"column_start":5,"column_end":88}},{"value":"/ Additional entities can be provided in `custom_entities`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321230,"byte_end":321291,"line_start":587,"line_end":587,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321296,"byte_end":321299,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321304,"byte_end":321323,"line_start":589,"line_end":589,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321328,"byte_end":321331,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321336,"byte_end":321410,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321415,"byte_end":321418,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ See also [`unescaped()`](#method.unescaped)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":321423,"byte_end":321470,"line_start":593,"line_end":593,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":322783,"byte_end":322814,"line_start":631,"line_end":631,"column_start":12,"column_end":43},"name":"unescape_and_decode_without_bom","qualname":"<BytesText>::unescape_and_decode_without_bom","value":"pub fn unescape_and_decode_without_bom<B: BufRead>(&Self, &Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":322435,"byte_end":322507,"line_start":623,"line_end":623,"column_start":5,"column_end":77}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":322512,"byte_end":322549,"line_start":624,"line_end":624,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":322554,"byte_end":322557,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":322562,"byte_end":322626,"line_start":626,"line_end":626,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":322631,"byte_end":322668,"line_start":627,"line_end":627,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":322673,"byte_end":322702,"line_start":628,"line_end":628,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":322707,"byte_end":322733,"line_start":629,"line_end":629,"column_start":5,"column_end":31}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":322738,"byte_end":322771,"line_start":630,"line_end":630,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":324223,"byte_end":324275,"line_start":670,"line_end":670,"column_start":12,"column_end":64},"name":"unescape_and_decode_without_bom_with_custom_entities","qualname":"<BytesText>::unescape_and_decode_without_bom_with_custom_entities","value":"pub fn unescape_and_decode_without_bom_with_custom_entities<B: BufRead>(&Self,\n                                                                        &Reader<B>,\n                                                                        &HashMap<Vec<u8>,\n                                                                                 Vec<u8>>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding with custom entities\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding with custom entities","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":323735,"byte_end":323828,"line_start":658,"line_end":658,"column_start":5,"column_end":98}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":323833,"byte_end":323870,"line_start":659,"line_end":659,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":323875,"byte_end":323878,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":323883,"byte_end":323947,"line_start":661,"line_end":661,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":323952,"byte_end":323989,"line_start":662,"line_end":662,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":323994,"byte_end":324023,"line_start":663,"line_end":663,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":324028,"byte_end":324054,"line_start":664,"line_end":664,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":324059,"byte_end":324062,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":324067,"byte_end":324086,"line_start":666,"line_end":666,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":324091,"byte_end":324094,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":324099,"byte_end":324173,"line_start":668,"line_end":668,"column_start":5,"column_end":79}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":324178,"byte_end":324211,"line_start":669,"line_end":669,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":325755,"byte_end":325774,"line_start":708,"line_end":708,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesText>::unescape_and_decode","value":"pub fn unescape_and_decode<B: BufRead>(&Self, &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":325487,"byte_end":325559,"line_start":702,"line_end":702,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":325564,"byte_end":325567,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":325572,"byte_end":325636,"line_start":704,"line_end":704,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":325641,"byte_end":325678,"line_start":705,"line_end":705,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":325683,"byte_end":325712,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":325717,"byte_end":325743,"line_start":707,"line_end":707,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326324,"byte_end":326364,"line_start":722,"line_end":722,"column_start":12,"column_end":52},"name":"unescape_and_decode_with_custom_entities","qualname":"<BytesText>::unescape_and_decode_with_custom_entities","value":"pub fn unescape_and_decode_with_custom_entities<B: BufRead>(&Self, &Reader<B>,\n                                                            &HashMap<Vec<u8>,\n                                                                     Vec<u8>>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding with custom entities","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding with custom entities","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":325916,"byte_end":326009,"line_start":712,"line_end":712,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326014,"byte_end":326017,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326022,"byte_end":326086,"line_start":714,"line_end":714,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326091,"byte_end":326128,"line_start":715,"line_end":715,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326133,"byte_end":326162,"line_start":716,"line_end":716,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326167,"byte_end":326193,"line_start":717,"line_end":717,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326198,"byte_end":326201,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Pre-condition","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326206,"byte_end":326225,"line_start":719,"line_end":719,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326230,"byte_end":326233,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The keys and values of `custom_entities`, if any, must be valid UTF-8.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":326238,"byte_end":326312,"line_start":721,"line_end":721,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":327612,"byte_end":327619,"line_start":755,"line_end":755,"column_start":12,"column_end":19},"name":"escaped","qualname":"<BytesText>::escaped","value":"pub fn escaped(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets escaped content.\n","sig":null,"attributes":[{"value":"/ Gets escaped content.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":327575,"byte_end":327600,"line_start":754,"line_end":754,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1381},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328194,"byte_end":328199,"line_start":776,"line_end":776,"column_start":5,"column_end":10},"name":"Start","qualname":"::events::Event::Start","value":"Event::Start(BytesStart)","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Start tag (with attributes) `<tag attr=\"value\">`.\n","sig":null,"attributes":[{"value":"/ Start tag (with attributes) `<tag attr=\"value\">`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328136,"byte_end":328189,"line_start":775,"line_end":775,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1384},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328247,"byte_end":328250,"line_start":778,"line_end":778,"column_start":5,"column_end":8},"name":"End","qualname":"::events::Event::End","value":"Event::End(BytesEnd)","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" End tag `</tag>`.\n","sig":null,"attributes":[{"value":"/ End tag `</tag>`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328221,"byte_end":328242,"line_start":777,"line_end":777,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1387},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328338,"byte_end":328343,"line_start":780,"line_end":780,"column_start":5,"column_end":10},"name":"Empty","qualname":"::events::Event::Empty","value":"Event::Empty(BytesStart)","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Empty element tag (with attributes) `<tag attr=\"value\" />`.\n","sig":null,"attributes":[{"value":"/ Empty element tag (with attributes) `<tag attr=\"value\" />`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328270,"byte_end":328333,"line_start":779,"line_end":779,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328423,"byte_end":328427,"line_start":782,"line_end":782,"column_start":5,"column_end":9},"name":"Text","qualname":"::events::Event::Text","value":"Event::Text(BytesText)","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Character data between `Start` and `End` element.\n","sig":null,"attributes":[{"value":"/ Character data between `Start` and `End` element.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328365,"byte_end":328418,"line_start":781,"line_end":781,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328480,"byte_end":328487,"line_start":784,"line_end":784,"column_start":5,"column_end":12},"name":"Comment","qualname":"::events::Event::Comment","value":"Event::Comment(BytesText)","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Comment `<!-- ... -->`.\n","sig":null,"attributes":[{"value":"/ Comment `<!-- ... -->`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328448,"byte_end":328475,"line_start":783,"line_end":783,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1396},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328541,"byte_end":328546,"line_start":786,"line_end":786,"column_start":5,"column_end":10},"name":"CData","qualname":"::events::Event::CData","value":"Event::CData(BytesText)","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" CData `<![CDATA[...]]>`.\n","sig":null,"attributes":[{"value":"/ CData `<![CDATA[...]]>`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328508,"byte_end":328536,"line_start":785,"line_end":785,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328606,"byte_end":328610,"line_start":788,"line_end":788,"column_start":5,"column_end":9},"name":"Decl","qualname":"::events::Event::Decl","value":"Event::Decl(BytesDecl)","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" XML declaration `<?xml ...?>`.\n","sig":null,"attributes":[{"value":"/ XML declaration `<?xml ...?>`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328567,"byte_end":328601,"line_start":787,"line_end":787,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1402},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328673,"byte_end":328675,"line_start":790,"line_end":790,"column_start":5,"column_end":7},"name":"PI","qualname":"::events::Event::PI","value":"Event::PI(BytesText)","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Processing instruction `<?...?>`.\n","sig":null,"attributes":[{"value":"/ Processing instruction `<?...?>`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328631,"byte_end":328668,"line_start":789,"line_end":789,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1405},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328729,"byte_end":328736,"line_start":792,"line_end":792,"column_start":5,"column_end":12},"name":"DocType","qualname":"::events::Event::DocType","value":"Event::DocType(BytesText)","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Doctype `<!DOCTYPE...>`.\n","sig":null,"attributes":[{"value":"/ Doctype `<!DOCTYPE...>`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328696,"byte_end":328724,"line_start":791,"line_end":791,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1408},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328786,"byte_end":328789,"line_start":794,"line_end":794,"column_start":5,"column_end":8},"name":"Eof","qualname":"::events::Event::Eof","value":"Event::Eof","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" End of XML document.\n","sig":null,"attributes":[{"value":"/ End of XML document.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328757,"byte_end":328781,"line_start":793,"line_end":793,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1379},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328120,"byte_end":328125,"line_start":774,"line_end":774,"column_start":10,"column_end":15},"name":"Event","qualname":"::events::Event","value":"pub enum Event<'a> {\n    Start(BytesStart),\n    End(BytesEnd),\n    Empty(BytesStart),\n    Text(BytesText),\n    Comment(BytesText),\n    CData(BytesText),\n    Decl(BytesDecl),\n    PI(BytesText),\n    DocType(BytesText),\n    Eof,\n}","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408}],"decl_id":null,"docs":" Event emitted by [`Reader::read_event`].","sig":null,"attributes":[{"value":"/ Event emitted by [`Reader::read_event`].","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":327963,"byte_end":328007,"line_start":770,"line_end":770,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328008,"byte_end":328011,"line_start":771,"line_end":771,"column_start":1,"column_end":4}},{"value":"/ [`Reader::read_event`]: ../reader/struct.Reader.html#method.read_event","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328012,"byte_end":328086,"line_start":772,"line_end":772,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328975,"byte_end":328985,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Event>::into_owned","value":"pub fn into_owned(Self) -> Event","parent":null,"children":[],"decl_id":null,"docs":" Converts the event to an owned version, untied to the lifetime of\n buffer used when reading but incurring a new, seperate allocation.\n","sig":null,"attributes":[{"value":"/ Converts the event to an owned version, untied to the lifetime of","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328819,"byte_end":328888,"line_start":798,"line_end":798,"column_start":5,"column_end":74}},{"value":"/ buffer used when reading but incurring a new, seperate allocation.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328893,"byte_end":328963,"line_start":799,"line_end":799,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1427},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353512,"byte_end":353518,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"decl_id":null,"docs":" A low level encoding-agnostic XML event reader.","sig":null,"attributes":[{"value":"/ A low level encoding-agnostic XML event reader.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352242,"byte_end":352293,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352294,"byte_end":352297,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Consumes a `BufRead` and streams XML `Event`s.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352298,"byte_end":352348,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352349,"byte_end":352352,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352353,"byte_end":352367,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352368,"byte_end":352371,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352372,"byte_end":352379,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352380,"byte_end":352406,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352407,"byte_end":352440,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352441,"byte_end":352444,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352445,"byte_end":352482,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352483,"byte_end":352539,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/                 <tag2>Test 2</tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352540,"byte_end":352579,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352580,"byte_end":352606,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352607,"byte_end":352650,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352651,"byte_end":352678,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352679,"byte_end":352701,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352702,"byte_end":352731,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352732,"byte_end":352761,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352762,"byte_end":352772,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352773,"byte_end":352816,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352817,"byte_end":352857,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/             match e.name() {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352858,"byte_end":352890,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/                 b\"tag1\" => println!(\"attributes values: {:?}\",","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352891,"byte_end":352957,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/                                     e.attributes().map(|a| a.unwrap().value)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":352958,"byte_end":353038,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/                                     .collect::<Vec<_>>()),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353039,"byte_end":353101,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/                 b\"tag2\" => count += 1,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353102,"byte_end":353144,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"/                 _ => (),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353145,"byte_end":353173,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353174,"byte_end":353191,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353192,"byte_end":353206,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).unwrap()),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353207,"byte_end":353291,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353292,"byte_end":353380,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353381,"byte_end":353417,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/         _ => (),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353418,"byte_end":353438,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353439,"byte_end":353448,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353449,"byte_end":353469,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353470,"byte_end":353475,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":353476,"byte_end":353483,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":354892,"byte_end":354903,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Reader<B>>::from_reader","value":"pub fn from_reader(B) -> Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Reader` that reads from a reader implementing `BufRead`.\n","sig":null,"attributes":[{"value":"/ Creates a `Reader` that reads from a reader implementing `BufRead`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":354809,"byte_end":354880,"line_start":101,"line_end":101,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356172,"byte_end":356193,"line_start":134,"line_end":134,"column_start":12,"column_end":33},"name":"expand_empty_elements","qualname":"<Reader<B>>::expand_empty_elements","value":"pub fn expand_empty_elements(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether empty elements should be split into an `Open` and a `Close` event.","sig":null,"attributes":[{"value":"/ Changes whether empty elements should be split into an `Open` and a `Close` event.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":355589,"byte_end":355675,"line_start":123,"line_end":123,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":355680,"byte_end":355683,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, all [`Empty`] events produced by a self-closing tag like `<tag/>` are","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":355688,"byte_end":355781,"line_start":125,"line_end":125,"column_start":5,"column_end":98}},{"value":"/ expanded into a [`Start`] event followed by a [`End`] event. When set to `false` (the","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":355786,"byte_end":355875,"line_start":126,"line_end":126,"column_start":5,"column_end":94}},{"value":"/ default), those tags are represented by an [`Empty`] event instead.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":355880,"byte_end":355951,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":355956,"byte_end":355959,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":355964,"byte_end":355988,"line_start":129,"line_end":129,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":355993,"byte_end":355996,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: events/enum.Event.html#variant.Empty","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356001,"byte_end":356052,"line_start":131,"line_end":131,"column_start":5,"column_end":56}},{"value":"/ [`Start`]: events/enum.Event.html#variant.Start","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356057,"byte_end":356108,"line_start":132,"line_end":132,"column_start":5,"column_end":56}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356113,"byte_end":356160,"line_start":133,"line_end":133,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356615,"byte_end":356624,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"trim_text","qualname":"<Reader<B>>::trim_text","value":"pub fn trim_text(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether whitespace before and after character data should be removed.","sig":null,"attributes":[{"value":"/ Changes whether whitespace before and after character data should be removed.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356302,"byte_end":356383,"line_start":139,"line_end":139,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356388,"byte_end":356391,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, all [`Text`] events are trimmed. If they are empty, no event will be","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356396,"byte_end":356488,"line_start":141,"line_end":141,"column_start":5,"column_end":97}},{"value":"/ pushed.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356493,"byte_end":356504,"line_start":142,"line_end":142,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356509,"byte_end":356512,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356517,"byte_end":356541,"line_start":144,"line_end":144,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356546,"byte_end":356549,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356554,"byte_end":356603,"line_start":146,"line_end":146,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357029,"byte_end":357042,"line_start":160,"line_end":160,"column_start":12,"column_end":25},"name":"trim_text_end","qualname":"<Reader<B>>::trim_text_end","value":"pub fn trim_text_end(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether whitespace after character data should be removed.","sig":null,"attributes":[{"value":"/ Changes whether whitespace after character data should be removed.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356761,"byte_end":356831,"line_start":153,"line_end":153,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356836,"byte_end":356839,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, trailing whitespace is trimmed in [`Text`] events.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356844,"byte_end":356918,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356923,"byte_end":356926,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356931,"byte_end":356955,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356960,"byte_end":356963,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":356968,"byte_end":357017,"line_start":159,"line_end":159,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357655,"byte_end":357688,"line_start":176,"line_end":176,"column_start":12,"column_end":45},"name":"trim_markup_names_in_closing_tags","qualname":"<Reader<B>>::trim_markup_names_in_closing_tags","value":"pub fn trim_markup_names_in_closing_tags(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether trailing whitespaces after the markup name are trimmed in closing tags\n `</a >`.","sig":null,"attributes":[{"value":"/ Changes whether trailing whitespaces after the markup name are trimmed in closing tags","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357143,"byte_end":357233,"line_start":165,"line_end":165,"column_start":5,"column_end":95}},{"value":"/ `</a >`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357238,"byte_end":357250,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357255,"byte_end":357258,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If true the emitted [`End`] event is stripped of trailing whitespace after the markup name.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357263,"byte_end":357358,"line_start":168,"line_end":168,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357363,"byte_end":357366,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Note that if set to `false` and `check_end_names` is true the comparison of markup names is","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357371,"byte_end":357466,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ going to fail erronously if a closing tag contains trailing whitespaces.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357471,"byte_end":357547,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357552,"byte_end":357555,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357560,"byte_end":357583,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357588,"byte_end":357591,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357596,"byte_end":357643,"line_start":175,"line_end":175,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358413,"byte_end":358428,"line_start":194,"line_end":194,"column_start":12,"column_end":27},"name":"check_end_names","qualname":"<Reader<B>>::check_end_names","value":"pub fn check_end_names(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether mismatched closing tag names should be detected.","sig":null,"attributes":[{"value":"/ Changes whether mismatched closing tag names should be detected.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357809,"byte_end":357877,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357882,"byte_end":357885,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ When set to `false`, it won't check if a closing tag matches the corresponding opening tag.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357890,"byte_end":357985,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ For example, `<mytag></different_tag>` will be permitted.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":357990,"byte_end":358051,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358056,"byte_end":358059,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ If the XML is known to be sane (already processed, etc.) this saves extra time.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358064,"byte_end":358147,"line_start":186,"line_end":186,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358152,"byte_end":358155,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that the emitted [`End`] event will not be modified if this is disabled, ie. it will","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358160,"byte_end":358253,"line_start":188,"line_end":188,"column_start":5,"column_end":98}},{"value":"/ contain the data of the mismatched end tag.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358258,"byte_end":358305,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358310,"byte_end":358313,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358318,"byte_end":358341,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358346,"byte_end":358349,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358354,"byte_end":358401,"line_start":193,"line_end":193,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":359016,"byte_end":359030,"line_start":209,"line_end":209,"column_start":12,"column_end":26},"name":"check_comments","qualname":"<Reader<B>>::check_comments","value":"pub fn check_comments(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether comments should be validated.","sig":null,"attributes":[{"value":"/ Changes whether comments should be validated.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358531,"byte_end":358580,"line_start":199,"line_end":199,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358585,"byte_end":358588,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, every [`Comment`] event will be checked for not containing `--`, which","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358593,"byte_end":358687,"line_start":201,"line_end":201,"column_start":5,"column_end":99}},{"value":"/ is not allowed in XML comments. Most of the time we don't want comments at all so we don't","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358692,"byte_end":358786,"line_start":202,"line_end":202,"column_start":5,"column_end":99}},{"value":"/ really care about comment correctness, thus the default value is `false` to improve","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358791,"byte_end":358878,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"/ performance.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358883,"byte_end":358899,"line_start":204,"line_end":204,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358904,"byte_end":358907,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358912,"byte_end":358936,"line_start":206,"line_end":206,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358941,"byte_end":358944,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`Comment`]: events/enum.Event.html#variant.Comment","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":358949,"byte_end":359004,"line_start":208,"line_end":208,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":359243,"byte_end":359258,"line_start":217,"line_end":217,"column_start":12,"column_end":27},"name":"buffer_position","qualname":"<Reader<B>>::buffer_position","value":"pub fn buffer_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the current byte position in the input data.","sig":null,"attributes":[{"value":"/ Gets the current byte position in the input data.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":359132,"byte_end":359185,"line_start":214,"line_end":214,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":359190,"byte_end":359193,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Useful when debugging errors.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":359198,"byte_end":359231,"line_start":216,"line_end":216,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373065,"byte_end":373075,"line_start":546,"line_end":546,"column_start":12,"column_end":22},"name":"read_event","qualname":"<Reader<B>>::read_event","value":"pub fn read_event<'a, 'b>(&'a mut Self, &'b mut Vec<u8>) -> Result<Event>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next `Event`.","sig":null,"attributes":[{"value":"/ Reads the next `Event`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371382,"byte_end":371409,"line_start":503,"line_end":503,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371414,"byte_end":371417,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ This is the main entry point for reading XML `Event`s.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371422,"byte_end":371480,"line_start":505,"line_end":505,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371485,"byte_end":371488,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ `Event`s borrow `buf` and can be converted to own their data if needed (uses `Cow`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371493,"byte_end":371579,"line_start":507,"line_end":507,"column_start":5,"column_end":91}},{"value":"/ internally).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371584,"byte_end":371600,"line_start":508,"line_end":508,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371605,"byte_end":371608,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Having the possibility to control the internal buffers gives you some additional benefits","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371613,"byte_end":371706,"line_start":510,"line_end":510,"column_start":5,"column_end":98}},{"value":"/ such as:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371711,"byte_end":371723,"line_start":511,"line_end":511,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371728,"byte_end":371731,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ - Reduce the number of allocations by reusing the same buffer. For constrained systems,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371736,"byte_end":371827,"line_start":513,"line_end":513,"column_start":5,"column_end":96}},{"value":"/   you can call `buf.clear()` once you are done with processing the event (typically at the","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371832,"byte_end":371926,"line_start":514,"line_end":514,"column_start":5,"column_end":99}},{"value":"/   end of your loop).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371931,"byte_end":371955,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/ - Reserve the buffer length if you know the file size (using `Vec::with_capacity`).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":371960,"byte_end":372047,"line_start":516,"line_end":516,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372052,"byte_end":372055,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372060,"byte_end":372074,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372079,"byte_end":372082,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372087,"byte_end":372094,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372099,"byte_end":372125,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372130,"byte_end":372163,"line_start":522,"line_end":522,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372168,"byte_end":372171,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372176,"byte_end":372213,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372218,"byte_end":372274,"line_start":525,"line_end":525,"column_start":5,"column_end":61}},{"value":"/                 <tag2>Test 2</tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372279,"byte_end":372318,"line_start":526,"line_end":526,"column_start":5,"column_end":44}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372323,"byte_end":372349,"line_start":527,"line_end":527,"column_start":5,"column_end":31}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372354,"byte_end":372397,"line_start":528,"line_end":528,"column_start":5,"column_end":48}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372402,"byte_end":372429,"line_start":529,"line_end":529,"column_start":5,"column_end":32}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372434,"byte_end":372456,"line_start":530,"line_end":530,"column_start":5,"column_end":27}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372461,"byte_end":372490,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372495,"byte_end":372524,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/ loop {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372529,"byte_end":372539,"line_start":533,"line_end":533,"column_start":5,"column_end":15}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372544,"byte_end":372587,"line_start":534,"line_end":534,"column_start":5,"column_end":48}},{"value":"/         Ok(Event::Start(ref e)) => count += 1,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372592,"byte_end":372642,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).expect(\"Error!\")),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372647,"byte_end":372739,"line_start":536,"line_end":536,"column_start":5,"column_end":97}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372744,"byte_end":372832,"line_start":537,"line_end":537,"column_start":5,"column_end":93}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372837,"byte_end":372873,"line_start":538,"line_end":538,"column_start":5,"column_end":41}},{"value":"/         _ => (),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372878,"byte_end":372898,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372903,"byte_end":372912,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372917,"byte_end":372937,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372942,"byte_end":372947,"line_start":542,"line_end":542,"column_start":5,"column_end":10}},{"value":"/ println!(\"Found {} start events\", count);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":372952,"byte_end":372997,"line_start":543,"line_end":543,"column_start":5,"column_end":50}},{"value":"/ println!(\"Text events: {:?}\", txt);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373002,"byte_end":373041,"line_start":544,"line_end":544,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373046,"byte_end":373053,"line_start":545,"line_end":545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374047,"byte_end":374062,"line_start":568,"line_end":568,"column_start":12,"column_end":27},"name":"event_namespace","qualname":"<Reader<B>>::event_namespace","value":"pub fn event_namespace<'a, 'b, 'c>(&'a Self, &'b [u8], &'c [u8])\n-> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **event name** into (namespace name, local name).","sig":null,"attributes":[{"value":"/ Resolves a potentially qualified **event name** into (namespace name, local name).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373578,"byte_end":373664,"line_start":560,"line_end":560,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373669,"byte_end":373672,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ *Qualified* attribute names have the form `prefix:local-name` where the`prefix` is defined","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373677,"byte_end":373771,"line_start":562,"line_end":562,"column_start":5,"column_end":99}},{"value":"/ on any containing XML element via `xmlns:prefix=\"the:namespace:uri\"`. The namespace prefix","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373776,"byte_end":373870,"line_start":563,"line_end":563,"column_start":5,"column_end":99}},{"value":"/ can be defined on the same element as the attribute in question.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373875,"byte_end":373943,"line_start":564,"line_end":564,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373948,"byte_end":373951,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ *Unqualified* event inherits the current *default namespace*.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":373956,"byte_end":374021,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374026,"byte_end":374035,"line_start":567,"line_end":567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374782,"byte_end":374801,"line_start":585,"line_end":585,"column_start":12,"column_end":31},"name":"attribute_namespace","qualname":"<Reader<B>>::attribute_namespace","value":"pub fn attribute_namespace<'a, 'b, 'c>(&'a Self, &'b [u8], &'c [u8])\n-> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **attribute name** into (namespace name, local name).","sig":null,"attributes":[{"value":"/ Resolves a potentially qualified **attribute name** into (namespace name, local name).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374291,"byte_end":374381,"line_start":577,"line_end":577,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374386,"byte_end":374389,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ *Qualified* attribute names have the form `prefix:local-name` where the`prefix` is defined","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374394,"byte_end":374488,"line_start":579,"line_end":579,"column_start":5,"column_end":99}},{"value":"/ on any containing XML element via `xmlns:prefix=\"the:namespace:uri\"`. The namespace prefix","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374493,"byte_end":374587,"line_start":580,"line_end":580,"column_start":5,"column_end":99}},{"value":"/ can be defined on the same element as the attribute in question.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374592,"byte_end":374660,"line_start":581,"line_end":581,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374665,"byte_end":374668,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ *Unqualified* attribute names do *not* inherit the current *default namespace*.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374673,"byte_end":374756,"line_start":583,"line_end":583,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":374761,"byte_end":374770,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376729,"byte_end":376750,"line_start":636,"line_end":636,"column_start":12,"column_end":33},"name":"read_namespaced_event","qualname":"<Reader<B>>::read_namespaced_event","value":"pub fn read_namespaced_event<'a, 'b,\n                             'c>(&'a mut Self, &'b mut Vec<u8>,\n                                 &'c mut Vec<u8>)\n-> Result<(Option<&'c [u8]>, Event)>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next event and resolves its namespace (if applicable).","sig":null,"attributes":[{"value":"/ Reads the next event and resolves its namespace (if applicable).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375031,"byte_end":375099,"line_start":594,"line_end":594,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375104,"byte_end":375107,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375112,"byte_end":375126,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375131,"byte_end":375134,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375139,"byte_end":375146,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use std::str::from_utf8;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375151,"byte_end":375179,"line_start":599,"line_end":599,"column_start":5,"column_end":33}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375184,"byte_end":375210,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375215,"byte_end":375248,"line_start":601,"line_end":601,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375253,"byte_end":375256,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<x:tag1 xmlns:x=\"www.xxxx\" xmlns:y=\"www.yyyy\" att1 = \"test\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375261,"byte_end":375338,"line_start":603,"line_end":603,"column_start":5,"column_end":82}},{"value":"/                 <y:tag2><!--Test comment-->Test</y:tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375343,"byte_end":375403,"line_start":604,"line_end":604,"column_start":5,"column_end":65}},{"value":"/                 <y:tag2>Test 2</y:tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375408,"byte_end":375451,"line_start":605,"line_end":605,"column_start":5,"column_end":48}},{"value":"/             </x:tag1>\"#;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375456,"byte_end":375484,"line_start":606,"line_end":606,"column_start":5,"column_end":33}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375489,"byte_end":375532,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375537,"byte_end":375564,"line_start":608,"line_end":608,"column_start":5,"column_end":32}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375569,"byte_end":375591,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375596,"byte_end":375625,"line_start":610,"line_end":610,"column_start":5,"column_end":34}},{"value":"/ let mut ns_buf = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375630,"byte_end":375662,"line_start":611,"line_end":611,"column_start":5,"column_end":37}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375667,"byte_end":375696,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/ loop {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375701,"byte_end":375711,"line_start":613,"line_end":613,"column_start":5,"column_end":15}},{"value":"/     match reader.read_namespaced_event(&mut buf, &mut ns_buf) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375716,"byte_end":375783,"line_start":614,"line_end":614,"column_start":5,"column_end":72}},{"value":"/         Ok((ref ns, Event::Start(ref e))) => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375788,"byte_end":375838,"line_start":615,"line_end":615,"column_start":5,"column_end":55}},{"value":"/             count += 1;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375843,"byte_end":375870,"line_start":616,"line_end":616,"column_start":5,"column_end":32}},{"value":"/             match (*ns, e.local_name()) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375875,"byte_end":375920,"line_start":617,"line_end":617,"column_start":5,"column_end":50}},{"value":"/                 (Some(b\"www.xxxx\"), b\"tag1\") => (),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375925,"byte_end":375980,"line_start":618,"line_end":618,"column_start":5,"column_end":60}},{"value":"/                 (Some(b\"www.yyyy\"), b\"tag2\") => (),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":375985,"byte_end":376040,"line_start":619,"line_end":619,"column_start":5,"column_end":60}},{"value":"/                 (ns, n) => panic!(\"Namespace and local name mismatch\"),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376045,"byte_end":376120,"line_start":620,"line_end":620,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376125,"byte_end":376142,"line_start":621,"line_end":621,"column_start":5,"column_end":22}},{"value":"/             println!(\"Resolved namespace: {:?}\", ns.and_then(|ns| from_utf8(ns).ok()));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376147,"byte_end":376238,"line_start":622,"line_end":622,"column_start":5,"column_end":96}},{"value":"/         }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376243,"byte_end":376256,"line_start":623,"line_end":623,"column_start":5,"column_end":18}},{"value":"/         Ok((_, Event::Text(e))) => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376261,"byte_end":376301,"line_start":624,"line_end":624,"column_start":5,"column_end":45}},{"value":"/             txt.push(e.unescape_and_decode(&reader).expect(\"Error!\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376306,"byte_end":376379,"line_start":625,"line_end":625,"column_start":5,"column_end":78}},{"value":"/         },","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376384,"byte_end":376398,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376403,"byte_end":376491,"line_start":627,"line_end":627,"column_start":5,"column_end":93}},{"value":"/         Ok((_, Event::Eof)) => break,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376496,"byte_end":376537,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/         _ => (),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376542,"byte_end":376562,"line_start":629,"line_end":629,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376567,"byte_end":376576,"line_start":630,"line_end":630,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376581,"byte_end":376601,"line_start":631,"line_end":631,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376606,"byte_end":376611,"line_start":632,"line_end":632,"column_start":5,"column_end":10}},{"value":"/ println!(\"Found {} start events\", count);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376616,"byte_end":376661,"line_start":633,"line_end":633,"column_start":5,"column_end":50}},{"value":"/ println!(\"Text events: {:?}\", txt);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376666,"byte_end":376705,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":376710,"byte_end":376717,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379962,"byte_end":379980,"line_start":717,"line_end":717,"column_start":12,"column_end":30},"name":"decode_without_bom","qualname":"<Reader<B>>::decode_without_bom","value":"pub fn decode_without_bom<'c>(&Self, &'c [u8]) -> Result<&'c str>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a UTF8 slice without BOM (Byte order mark) regardless of XML declaration.","sig":null,"attributes":[{"value":"/ Decodes a UTF8 slice without BOM (Byte order mark) regardless of XML declaration.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379567,"byte_end":379652,"line_start":707,"line_end":707,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379657,"byte_end":379660,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Decode `bytes` without BOM and with malformed sequences replaced with the","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379665,"byte_end":379742,"line_start":709,"line_end":709,"column_start":5,"column_end":82}},{"value":"/ `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379747,"byte_end":379782,"line_start":710,"line_end":710,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379787,"byte_end":379790,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379795,"byte_end":379805,"line_start":712,"line_end":712,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379810,"byte_end":379813,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ If you instead want to use XML declared encoding, use the `encoding` feature","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379818,"byte_end":379898,"line_start":714,"line_end":714,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379903,"byte_end":379912,"line_start":715,"line_end":715,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":379917,"byte_end":379950,"line_start":716,"line_end":716,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381668,"byte_end":381674,"line_start":762,"line_end":762,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<B>>::decode","value":"pub fn decode<'c>(&Self, &'c [u8]) -> Result<&'c str>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a UTF8 slice regardless of XML declaration.","sig":null,"attributes":[{"value":"/ Decodes a UTF8 slice regardless of XML declaration.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381297,"byte_end":381352,"line_start":752,"line_end":752,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381357,"byte_end":381360,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Decode `bytes` with BOM sniffing and with malformed sequences replaced with the","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381365,"byte_end":381448,"line_start":754,"line_end":754,"column_start":5,"column_end":88}},{"value":"/ `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381453,"byte_end":381488,"line_start":755,"line_end":755,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381493,"byte_end":381496,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381501,"byte_end":381511,"line_start":757,"line_end":757,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381516,"byte_end":381519,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ If you instead want to use XML declared encoding, use the `encoding` feature","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381524,"byte_end":381604,"line_start":759,"line_end":759,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381609,"byte_end":381618,"line_start":760,"line_end":760,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381623,"byte_end":381656,"line_start":761,"line_end":761,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":382020,"byte_end":382027,"line_start":776,"line_end":776,"column_start":12,"column_end":19},"name":"decoder","qualname":"<Reader<B>>::decoder","value":"pub fn decoder(&Self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Get utf8 decoder\n","sig":null,"attributes":[{"value":"/ Get utf8 decoder","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381950,"byte_end":381970,"line_start":774,"line_end":774,"column_start":5,"column_end":25}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":381975,"byte_end":382008,"line_start":775,"line_end":775,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":382211,"byte_end":382222,"line_start":783,"line_end":783,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"<Reader<B>>::read_to_end","value":"pub fn read_to_end<K: AsRef<[u8]>>(&mut Self, K, &mut Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads until end element is found","sig":null,"attributes":[{"value":"/ Reads until end element is found","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":382075,"byte_end":382111,"line_start":780,"line_end":780,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":382116,"byte_end":382119,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Manages nested cases where parent and child elements have the same name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":382124,"byte_end":382199,"line_start":782,"line_end":782,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384175,"byte_end":384184,"line_start":839,"line_end":839,"column_start":12,"column_end":21},"name":"read_text","qualname":"<Reader<B>>::read_text","value":"pub fn read_text<K: AsRef<[u8]>>(&mut Self, K, &mut Vec<u8>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Reads optional text between start and end tags.","sig":null,"attributes":[{"value":"/ Reads optional text between start and end tags.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":382961,"byte_end":383012,"line_start":805,"line_end":805,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383017,"byte_end":383020,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ If the next event is a [`Text`] event, returns the decoded and unescaped content as a","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383025,"byte_end":383114,"line_start":807,"line_end":807,"column_start":5,"column_end":94}},{"value":"/ `String`. If the next event is an [`End`] event, returns the empty string. In all other","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383119,"byte_end":383210,"line_start":808,"line_end":808,"column_start":5,"column_end":96}},{"value":"/ cases, returns an error.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383215,"byte_end":383243,"line_start":809,"line_end":809,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383248,"byte_end":383251,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Any text will be decoded using the XML encoding specified in the XML declaration (or UTF-8","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383256,"byte_end":383350,"line_start":811,"line_end":811,"column_start":5,"column_end":99}},{"value":"/ if none is specified).","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383355,"byte_end":383381,"line_start":812,"line_end":812,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383386,"byte_end":383389,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383394,"byte_end":383408,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383413,"byte_end":383416,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383421,"byte_end":383428,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383433,"byte_end":383459,"line_start":817,"line_end":817,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383464,"byte_end":383497,"line_start":818,"line_end":818,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383502,"byte_end":383505,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let mut xml = Reader::from_reader(b\"","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383510,"byte_end":383550,"line_start":820,"line_end":820,"column_start":5,"column_end":45}},{"value":"/     <a>&lt;b&gt;</a>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383555,"byte_end":383579,"line_start":821,"line_end":821,"column_start":5,"column_end":29}},{"value":"/     <a></a>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383584,"byte_end":383599,"line_start":822,"line_end":822,"column_start":5,"column_end":20}},{"value":"/ \" as &[u8]);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383604,"byte_end":383620,"line_start":823,"line_end":823,"column_start":5,"column_end":21}},{"value":"/ xml.trim_text(true);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383625,"byte_end":383649,"line_start":824,"line_end":824,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383654,"byte_end":383657,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let expected = [\"<b>\", \"\"];","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383662,"byte_end":383693,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ for &content in expected.iter() {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383698,"byte_end":383735,"line_start":827,"line_end":827,"column_start":5,"column_end":42}},{"value":"/     match xml.read_event(&mut Vec::new()) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383740,"byte_end":383787,"line_start":828,"line_end":828,"column_start":5,"column_end":52}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383792,"byte_end":383832,"line_start":829,"line_end":829,"column_start":5,"column_end":45}},{"value":"/             assert_eq!(&xml.read_text(e.name(), &mut Vec::new()).unwrap(), content);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383837,"byte_end":383925,"line_start":830,"line_end":830,"column_start":5,"column_end":93}},{"value":"/         },","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383930,"byte_end":383944,"line_start":831,"line_end":831,"column_start":5,"column_end":19}},{"value":"/         e => panic!(\"Expecting Start event, found {:?}\", e),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":383949,"byte_end":384013,"line_start":832,"line_end":832,"column_start":5,"column_end":69}},{"value":"/     }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384018,"byte_end":384027,"line_start":833,"line_end":833,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384032,"byte_end":384037,"line_start":834,"line_end":834,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384042,"byte_end":384049,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384054,"byte_end":384057,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384062,"byte_end":384111,"line_start":837,"line_end":837,"column_start":5,"column_end":54}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384116,"byte_end":384163,"line_start":838,"line_end":838,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386483,"byte_end":386505,"line_start":903,"line_end":903,"column_start":12,"column_end":34},"name":"into_underlying_reader","qualname":"<Reader<B>>::into_underlying_reader","value":"pub fn into_underlying_reader(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes `Reader` returning the underlying reader","sig":null,"attributes":[{"value":"/ Consumes `Reader` returning the underlying reader","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384699,"byte_end":384752,"line_start":851,"line_end":851,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384757,"byte_end":384760,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ Can be used to compute line and column of a parsing error position","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384765,"byte_end":384835,"line_start":853,"line_end":853,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384840,"byte_end":384843,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384848,"byte_end":384862,"line_start":855,"line_end":855,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384867,"byte_end":384870,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384875,"byte_end":384882,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use std::{str, io::Cursor};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384887,"byte_end":384918,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384923,"byte_end":384949,"line_start":859,"line_end":859,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384954,"byte_end":384987,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":384992,"byte_end":384995,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385000,"byte_end":385037,"line_start":862,"line_end":862,"column_start":5,"column_end":42}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385042,"byte_end":385098,"line_start":863,"line_end":863,"column_start":5,"column_end":61}},{"value":"/                 <tag3>Test 2</tag3>","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385103,"byte_end":385142,"line_start":864,"line_end":864,"column_start":5,"column_end":44}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385147,"byte_end":385173,"line_start":865,"line_end":865,"column_start":5,"column_end":31}},{"value":"/ let mut reader = Reader::from_reader(Cursor::new(xml.as_bytes()));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385178,"byte_end":385248,"line_start":866,"line_end":866,"column_start":5,"column_end":75}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385253,"byte_end":385282,"line_start":867,"line_end":867,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385287,"byte_end":385290,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ fn into_line_and_column(reader: Reader<Cursor<&[u8]>>) -> (usize, usize) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385295,"byte_end":385373,"line_start":869,"line_end":869,"column_start":5,"column_end":83}},{"value":"/     let end_pos = reader.buffer_position();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385378,"byte_end":385425,"line_start":870,"line_end":870,"column_start":5,"column_end":52}},{"value":"/     let mut cursor = reader.into_underlying_reader();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385430,"byte_end":385487,"line_start":871,"line_end":871,"column_start":5,"column_end":62}},{"value":"/     let s = String::from_utf8(cursor.into_inner()[0..end_pos].to_owned())","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385492,"byte_end":385569,"line_start":872,"line_end":872,"column_start":5,"column_end":82}},{"value":"/         .expect(\"can't make a string\");","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385574,"byte_end":385617,"line_start":873,"line_end":873,"column_start":5,"column_end":48}},{"value":"/     let mut line = 1;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385622,"byte_end":385647,"line_start":874,"line_end":874,"column_start":5,"column_end":30}},{"value":"/     let mut column = 0;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385652,"byte_end":385679,"line_start":875,"line_end":875,"column_start":5,"column_end":32}},{"value":"/     for c in s.chars() {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385684,"byte_end":385712,"line_start":876,"line_end":876,"column_start":5,"column_end":33}},{"value":"/         if c == '\\n' {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385717,"byte_end":385743,"line_start":877,"line_end":877,"column_start":5,"column_end":31}},{"value":"/             line += 1;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385748,"byte_end":385774,"line_start":878,"line_end":878,"column_start":5,"column_end":31}},{"value":"/             column = 0;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385779,"byte_end":385806,"line_start":879,"line_end":879,"column_start":5,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385811,"byte_end":385831,"line_start":880,"line_end":880,"column_start":5,"column_end":25}},{"value":"/             column += 1;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385836,"byte_end":385864,"line_start":881,"line_end":881,"column_start":5,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385869,"byte_end":385882,"line_start":882,"line_end":882,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385887,"byte_end":385896,"line_start":883,"line_end":883,"column_start":5,"column_end":14}},{"value":"/     (line, column)","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385901,"byte_end":385923,"line_start":884,"line_end":884,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385928,"byte_end":385933,"line_start":885,"line_end":885,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385938,"byte_end":385941,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385946,"byte_end":385956,"line_start":887,"line_end":887,"column_start":5,"column_end":15}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":385961,"byte_end":386004,"line_start":888,"line_end":888,"column_start":5,"column_end":48}},{"value":"/         Ok(Event::Start(ref e)) => match e.name() {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386009,"byte_end":386064,"line_start":889,"line_end":889,"column_start":5,"column_end":60}},{"value":"/             b\"tag1\" | b\"tag2\" => (),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386069,"byte_end":386109,"line_start":890,"line_end":890,"column_start":5,"column_end":45}},{"value":"/             tag => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386114,"byte_end":386138,"line_start":891,"line_end":891,"column_start":5,"column_end":29}},{"value":"/                 assert_eq!(b\"tag3\", tag);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386143,"byte_end":386188,"line_start":892,"line_end":892,"column_start":5,"column_end":50}},{"value":"/                 assert_eq!((3, 22), into_line_and_column(reader));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386193,"byte_end":386263,"line_start":893,"line_end":893,"column_start":5,"column_end":75}},{"value":"/                 break;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386268,"byte_end":386294,"line_start":894,"line_end":894,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386299,"byte_end":386316,"line_start":895,"line_end":895,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386321,"byte_end":386335,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/         Ok(Event::Eof) => unreachable!(),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386340,"byte_end":386385,"line_start":897,"line_end":897,"column_start":5,"column_end":50}},{"value":"/         _ => (),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386390,"byte_end":386410,"line_start":898,"line_end":898,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386415,"byte_end":386424,"line_start":899,"line_end":899,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386429,"byte_end":386449,"line_start":900,"line_end":900,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386454,"byte_end":386459,"line_start":901,"line_end":901,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386464,"byte_end":386471,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386638,"byte_end":386647,"line_start":910,"line_end":910,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Reader<BufReader<File>>>::from_file","value":"pub fn from_file<P: AsRef<Path>>(P) -> Result<Reader<BufReader<File>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a file path.\n","sig":null,"attributes":[{"value":"/ Creates an XML reader from a file path.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386583,"byte_end":386626,"line_start":909,"line_end":909,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386949,"byte_end":386957,"line_start":919,"line_end":919,"column_start":12,"column_end":20},"name":"from_str","qualname":"<Reader<&'a [u8]>>::from_str","value":"pub fn from_str(&'a str) -> Reader<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a string slice.\n","sig":null,"attributes":[{"value":"/ Creates an XML reader from a string slice.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386891,"byte_end":386937,"line_start":918,"line_end":918,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1473},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":397974,"byte_end":397981,"line_start":1229,"line_end":1229,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" Utf8 Decoder\n","sig":null,"attributes":[{"value":"/ Utf8 Decoder","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":397889,"byte_end":397905,"line_start":1226,"line_end":1226,"column_start":1,"column_end":17}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":397906,"byte_end":397939,"line_start":1227,"line_end":1227,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":398174,"byte_end":398180,"line_start":1240,"line_end":1240,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"pub fn decode<'c>(&Self, &'c [u8]) -> Result<&'c str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":398129,"byte_end":398162,"line_start":1239,"line_end":1239,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":846},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"se","qualname":"::se","value":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1051},{"krate":0,"index":1061}],"decl_id":null,"docs":" Module to handle custom serde `Serializer`\n","sig":null,"attributes":[{"value":"cfg(feature = \"serialize\")","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4688,"byte_end":4717,"line_start":134,"line_end":134,"column_start":1,"column_end":30}},{"value":"/ Module to handle custom serde `Serializer`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":398427,"byte_end":398473,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":882},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":435025,"byte_end":435028,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Map","qualname":"::se::var::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":886}],"decl_id":null,"docs":" An implementation of `SerializeMap` for serializing to XML.\n","sig":null,"attributes":[{"value":"/ An implementation of `SerializeMap` for serializing to XML.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":434950,"byte_end":435013,"line_start":10,"line_end":10,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":435203,"byte_end":435206,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Map>::new","value":"pub fn new(&'w mut Serializer) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Map\n","sig":null,"attributes":[{"value":"/ Create a new Map","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":435171,"byte_end":435191,"line_start":22,"line_end":22,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":906},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":436863,"byte_end":436869,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"Struct","qualname":"::se::var::Struct","value":"Struct {  }","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913}],"decl_id":null,"docs":" An implementation of `SerializeStruct` for serializing to XML.\n","sig":null,"attributes":[{"value":"/ An implementation of `SerializeStruct` for serializing to XML.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":436785,"byte_end":436851,"line_start":74,"line_end":74,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":437393,"byte_end":437396,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Struct>::new","value":"pub fn new(&'w mut Serializer, &'r str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Struct`\n","sig":null,"attributes":[{"value":"/ Create a new `Struct`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":437356,"byte_end":437381,"line_start":93,"line_end":93,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":937},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439665,"byte_end":439668,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"Seq","qualname":"::se::var::Seq","value":"Seq {  }","parent":null,"children":[{"krate":0,"index":941}],"decl_id":null,"docs":" An implementation of `SerializeSeq' for serializing to XML.\n","sig":null,"attributes":[{"value":"/ An implementation of `SerializeSeq' for serializing to XML.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439590,"byte_end":439653,"line_start":174,"line_end":174,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439845,"byte_end":439848,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"new","qualname":"<Seq>::new","value":"pub fn new(&'w mut Serializer) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Seq`\n","sig":null,"attributes":[{"value":"/ Create a new `Seq`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439811,"byte_end":439833,"line_start":186,"line_end":186,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":956},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":440450,"byte_end":440455,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"Tuple","qualname":"::se::var::Tuple","value":"Tuple {  }","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961}],"decl_id":null,"docs":" An implementation of `SerializeTuple`, `SerializeTupleStruct` and\n `SerializeTupleVariant` for serializing to XML.\n","sig":null,"attributes":[{"value":"/ An implementation of `SerializeTuple`, `SerializeTupleStruct` and","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":440317,"byte_end":440386,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ `SerializeTupleVariant` for serializing to XML.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":440387,"byte_end":440438,"line_start":213,"line_end":213,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":440723,"byte_end":440726,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"new","qualname":"<Tuple>::new","value":"pub fn new(&'w mut Serializer, &'r str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Tuple`\n","sig":null,"attributes":[{"value":"/ Create a new `Tuple`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":440687,"byte_end":440711,"line_start":227,"line_end":227,"column_start":5,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":1040},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":398781,"byte_end":398790,"line_start":16,"line_end":16,"column_start":8,"column_end":17},"name":"to_writer","qualname":"::se::to_writer","value":"pub fn to_writer<W: Write, S: Serialize>(W, &S) -> Result<(), DeError>","parent":null,"children":[],"decl_id":null,"docs":" Serialize struct into a `Write`r\n","sig":null,"attributes":[{"value":"/ Serialize struct into a `Write`r","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":398737,"byte_end":398773,"line_start":15,"line_end":15,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1043},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":398996,"byte_end":399005,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"to_string","qualname":"::se::to_string","value":"pub fn to_string<S: Serialize>(&S) -> Result<String, DeError>","parent":null,"children":[],"decl_id":null,"docs":" Serialize struct into a `String`\n","sig":null,"attributes":[{"value":"/ Serialize struct into a `String`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":398952,"byte_end":398988,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399266,"byte_end":399276,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::se::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050}],"decl_id":null,"docs":" A Serializer\n","sig":null,"attributes":[{"value":"/ A Serializer","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399238,"byte_end":399254,"line_start":29,"line_end":29,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399783,"byte_end":399786,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Serializer` that uses struct name as a root tag name.","sig":null,"attributes":[{"value":"/ Creates a new `Serializer` that uses struct name as a root tag name.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399473,"byte_end":399545,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399550,"byte_end":399553,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note, that attempt to serialize a non-struct (including unit structs","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399558,"byte_end":399630,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ and newtype structs) will end up to an error. Use `with_root` to create","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399635,"byte_end":399710,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ serializer with explicitly defined root element name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399715,"byte_end":399771,"line_start":41,"line_end":41,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401504,"byte_end":401513,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"with_root","qualname":"<Serializer>::with_root","value":"pub fn with_root(Writer<W>, Option<&'r str>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Serializer` that uses specified root tag name","sig":null,"attributes":[{"value":"/ Creates a new `Serializer` that uses specified root tag name","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399870,"byte_end":399934,"line_start":46,"line_end":46,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399939,"byte_end":399942,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399947,"byte_end":399961,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399966,"byte_end":399969,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When serializing a primitive type, only its representation will be written:","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399974,"byte_end":400053,"line_start":50,"line_end":50,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400058,"byte_end":400061,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400066,"byte_end":400084,"line_start":52,"line_end":52,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serialize;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400089,"byte_end":400116,"line_start":53,"line_end":53,"column_start":5,"column_end":32}},{"value":"/ use quick_xml::Writer;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400121,"byte_end":400147,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/ # use quick_xml::se::Serializer;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400152,"byte_end":400188,"line_start":55,"line_end":55,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400193,"byte_end":400196,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400201,"byte_end":400233,"line_start":57,"line_end":57,"column_start":5,"column_end":37}},{"value":"/ let mut writer = Writer::new_with_indent(&mut buffer, b' ', 2);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400238,"byte_end":400305,"line_start":58,"line_end":58,"column_start":5,"column_end":72}},{"value":"/ let mut ser = Serializer::with_root(writer, Some(\"root\"));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400310,"byte_end":400372,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400377,"byte_end":400380,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ \"node\".serialize(&mut ser).unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400385,"byte_end":400425,"line_start":61,"line_end":61,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(String::from_utf8(buffer).unwrap(), \"node\");","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400430,"byte_end":400489,"line_start":62,"line_end":62,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400494,"byte_end":400501,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400506,"byte_end":400509,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ When serializing a struct, newtype struct, unit struct or tuple `root_tag`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400514,"byte_end":400592,"line_start":65,"line_end":65,"column_start":5,"column_end":83}},{"value":"/ is used as tag name of root(s) element(s):","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400597,"byte_end":400643,"line_start":66,"line_end":66,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400648,"byte_end":400651,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400656,"byte_end":400674,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use serde::Serialize;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400679,"byte_end":400706,"line_start":69,"line_end":69,"column_start":5,"column_end":32}},{"value":"/ use quick_xml::Writer;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400711,"byte_end":400737,"line_start":70,"line_end":70,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::se::Serializer;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400742,"byte_end":400776,"line_start":71,"line_end":71,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400781,"byte_end":400784,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, PartialEq, Serialize)]","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400789,"byte_end":400831,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ struct Struct {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400836,"byte_end":400855,"line_start":74,"line_end":74,"column_start":5,"column_end":24}},{"value":"/     question: String,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400860,"byte_end":400885,"line_start":75,"line_end":75,"column_start":5,"column_end":30}},{"value":"/     answer: u32,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400890,"byte_end":400910,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400915,"byte_end":400920,"line_start":77,"line_end":77,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400925,"byte_end":400928,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400933,"byte_end":400965,"line_start":79,"line_end":79,"column_start":5,"column_end":37}},{"value":"/ let mut writer = Writer::new_with_indent(&mut buffer, b' ', 2);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":400970,"byte_end":401037,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/ let mut ser = Serializer::with_root(writer, Some(\"root\"));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401042,"byte_end":401104,"line_start":81,"line_end":81,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401109,"byte_end":401112,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Struct {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401117,"byte_end":401129,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"/     question: \"The Ultimate Question of Life, the Universe, and Everything\".into(),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401134,"byte_end":401221,"line_start":84,"line_end":84,"column_start":5,"column_end":92}},{"value":"/     answer: 42,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401226,"byte_end":401245,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/ }.serialize(&mut ser).unwrap();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401250,"byte_end":401285,"line_start":86,"line_end":86,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401290,"byte_end":401305,"line_start":87,"line_end":87,"column_start":5,"column_end":20}},{"value":"/     String::from_utf8(buffer.clone()).unwrap(),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401310,"byte_end":401361,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/     r#\"<root question=\"The Ultimate Question of Life, the Universe, and Everything\" answer=\"42\"/>\"#","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401366,"byte_end":401469,"line_start":89,"line_end":89,"column_start":5,"column_end":108}},{"value":"/ );","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401474,"byte_end":401480,"line_start":90,"line_end":90,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":401485,"byte_end":401492,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1480},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445875,"byte_end":445881,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Writer","qualname":"::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483}],"decl_id":null,"docs":" XML writer.","sig":null,"attributes":[{"value":"/ XML writer.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":443905,"byte_end":443920,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":443921,"byte_end":443924,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Writes XML `Event`s to a `Write` implementor.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":443925,"byte_end":443974,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":443975,"byte_end":443978,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":443979,"byte_end":443993,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":443994,"byte_end":443997,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":443998,"byte_end":444009,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # extern crate quick_xml;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444010,"byte_end":444039,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444040,"byte_end":444057,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ use quick_xml::{Reader, Writer};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444058,"byte_end":444094,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use quick_xml::events::{Event, BytesEnd, BytesStart};","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444095,"byte_end":444152,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444153,"byte_end":444177,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444178,"byte_end":444181,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<this_tag k1=\"v1\" k2=\"v2\"><child>text</child></this_tag>\"#;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444182,"byte_end":444258,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444259,"byte_end":444302,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444303,"byte_end":444330,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ let mut writer = Writer::new(Cursor::new(Vec::new()));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444331,"byte_end":444389,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444390,"byte_end":444419,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444420,"byte_end":444430,"line_start":26,"line_end":26,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444431,"byte_end":444474,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444475,"byte_end":444542,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444543,"byte_end":444546,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/             // crates a new element ... alternatively we could reuse `e` by calling","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444547,"byte_end":444634,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/             // `e.into_owned()`","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444635,"byte_end":444670,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/             let mut elem = BytesStart::owned(b\"my_elem\".to_vec(), \"my_elem\".len());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444671,"byte_end":444758,"line_start":32,"line_end":32,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444759,"byte_end":444762,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/             // collect existing attributes","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444763,"byte_end":444809,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/             elem.extend_attributes(e.attributes().map(|attr| attr.unwrap()));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444810,"byte_end":444891,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444892,"byte_end":444895,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/             // copy existing attributes, adds a new my-key=\"some value\" attribute","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444896,"byte_end":444981,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/             elem.push_attribute((\"my-key\", \"some value\"));","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":444982,"byte_end":445044,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445045,"byte_end":445048,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/             // writes the event to the writer","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445049,"byte_end":445098,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/             assert!(writer.write_event(Event::Start(elem)).is_ok());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445099,"byte_end":445171,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/         },","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445172,"byte_end":445186,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::End(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445187,"byte_end":445252,"line_start":43,"line_end":43,"column_start":1,"column_end":66}},{"value":"/             assert!(writer.write_event(Event::End(BytesEnd::borrowed(b\"my_elem\"))).is_ok());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445253,"byte_end":445349,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/         },","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445350,"byte_end":445364,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445365,"byte_end":445401,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         // we can either move or borrow the event to write, depending on your use-case","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445402,"byte_end":445492,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/         Ok(e) => assert!(writer.write_event(&e).is_ok()),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445493,"byte_end":445554,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/         Err(e) => panic!(\"{}\", e),","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445555,"byte_end":445593,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445594,"byte_end":445603,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445604,"byte_end":445624,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445625,"byte_end":445630,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445631,"byte_end":445634,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let result = writer.into_inner().into_inner();","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445635,"byte_end":445685,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ let expected = r#\"<my_elem k1=\"v1\" k2=\"v2\" my-key=\"some value\"><child>text</child></my_elem>\"#;","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445686,"byte_end":445785,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(result, expected.as_bytes());","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445786,"byte_end":445830,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445831,"byte_end":445838,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445839,"byte_end":445846,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446055,"byte_end":446058,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<W>>::new","value":"pub fn new(W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer from a generic Write\n","sig":null,"attributes":[{"value":"/ Creates a Writer from a generic Write","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446002,"byte_end":446043,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446263,"byte_end":446278,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"new_with_indent","qualname":"<Writer<W>>::new_with_indent","value":"pub fn new_with_indent(W, u8, usize) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer with configured whitespace indents from a generic Write\n","sig":null,"attributes":[{"value":"/ Creates a Writer with configured whitespace indents from a generic Write","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446175,"byte_end":446251,"line_start":75,"line_end":75,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446548,"byte_end":446558,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying writer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Writer`, returning the underlying writer.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446476,"byte_end":446536,"line_start":83,"line_end":83,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446654,"byte_end":446659,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"inner","qualname":"<Writer<W>>::inner","value":"pub fn inner(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get inner writer, keeping ownership\n","sig":null,"attributes":[{"value":"/ Get inner writer, keeping ownership","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446603,"byte_end":446642,"line_start":88,"line_end":88,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446783,"byte_end":446794,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"write_event","qualname":"<Writer<W>>::write_event","value":"pub fn write_event<'a, E: AsRef<Event>>(&mut Self, E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the given event to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Writes the given event to the underlying writer.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":446719,"byte_end":446771,"line_start":93,"line_end":93,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":448342,"byte_end":448347,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<W>>::write","value":"pub fn write(&mut Self, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes bytes\n","sig":null,"attributes":[{"value":"/ Writes bytes","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":448300,"byte_end":448316,"line_start":133,"line_end":133,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":448321,"byte_end":448330,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449471,"byte_end":449483,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"write_indent","qualname":"<Writer<W>>::write_indent","value":"pub fn write_indent(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Manually write a newline and indentation at the proper level.","sig":null,"attributes":[{"value":"/ Manually write a newline and indentation at the proper level.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":448968,"byte_end":449033,"line_start":155,"line_end":155,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449038,"byte_end":449041,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This can be used when the heuristic to line break and indent after any [Event] apart","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449046,"byte_end":449134,"line_start":157,"line_end":157,"column_start":5,"column_end":93}},{"value":"/ from [Text] fails such as when a [Start] occurs directly after [Text].","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449139,"byte_end":449213,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ This method will do nothing if `Writer` was not constructed with `new_with_indent`.","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449218,"byte_end":449305,"line_start":159,"line_end":159,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449310,"byte_end":449313,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [Event]: events/enum.Event.html","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449318,"byte_end":449353,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/ [Text]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449358,"byte_end":449405,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/ [Start]: events/enum.Event.html#variant.Start","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449410,"byte_end":449459,"line_start":163,"line_end":163,"column_start":5,"column_end":54}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/escape.rs","byte_start":56491,"byte_end":56510,"line_start":24,"line_end":24,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/escape.rs","byte_start":57499,"byte_end":57518,"line_start":58,"line_end":58,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/escape.rs","byte_start":61748,"byte_end":61767,"line_start":204,"line_end":204,"column_start":35,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/escape.rs","byte_start":62071,"byte_end":62090,"line_start":217,"line_end":217,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/map.rs","byte_start":63677,"byte_end":63686,"line_start":32,"line_end":32,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/map.rs","byte_start":64358,"byte_end":64367,"line_start":53,"line_end":53,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/seq.rs","byte_start":67263,"byte_end":67268,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/seq.rs","byte_start":67845,"byte_end":67854,"line_start":36,"line_end":36,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/seq.rs","byte_start":68666,"byte_end":68675,"line_start":61,"line_end":61,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/var.rs","byte_start":69704,"byte_end":69714,"line_start":14,"line_end":14,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/var.rs","byte_start":69868,"byte_end":69878,"line_start":20,"line_end":20,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/var.rs","byte_start":70735,"byte_end":70748,"line_start":44,"line_end":44,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10688,"byte_end":10700,"line_start":144,"line_end":144,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72663,"byte_end":72668,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72859,"byte_end":72864,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":73220,"byte_end":73225,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75220,"byte_end":75225,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76539,"byte_end":76546,"line_start":158,"line_end":158,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":77816,"byte_end":77823,"line_start":184,"line_end":184,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78146,"byte_end":78153,"line_start":195,"line_end":195,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78302,"byte_end":78309,"line_start":201,"line_end":201,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78452,"byte_end":78459,"line_start":207,"line_end":207,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78586,"byte_end":78593,"line_start":213,"line_end":213,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78740,"byte_end":78747,"line_start":219,"line_end":219,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79632,"byte_end":79643,"line_start":28,"line_end":28,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":80835,"byte_end":80846,"line_start":56,"line_end":56,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":334342,"byte_end":334352,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336157,"byte_end":336166,"line_start":89,"line_end":89,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":343975,"byte_end":343984,"line_start":285,"line_end":285,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":344344,"byte_end":344353,"line_start":297,"line_end":297,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":344959,"byte_end":344968,"line_start":317,"line_end":317,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":345554,"byte_end":345564,"line_start":337,"line_end":337,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303490,"byte_end":303500,"line_start":39,"line_end":39,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313023,"byte_end":313033,"line_start":323,"line_end":323,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313534,"byte_end":313543,"line_start":341,"line_end":341,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317459,"byte_end":317467,"line_start":463,"line_end":463,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318613,"byte_end":318621,"line_start":506,"line_end":506,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319055,"byte_end":319064,"line_start":523,"line_end":523,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":327706,"byte_end":327715,"line_start":760,"line_end":760,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328803,"byte_end":328808,"line_start":797,"line_end":797,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":329652,"byte_end":329662,"line_start":816,"line_end":816,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":329771,"byte_end":329780,"line_start":823,"line_end":823,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":329893,"byte_end":329901,"line_start":830,"line_end":830,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":330011,"byte_end":330020,"line_start":837,"line_end":837,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":330133,"byte_end":330138,"line_start":844,"line_end":844,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":330641,"byte_end":330646,"line_start":861,"line_end":861,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":354793,"byte_end":354799,"line_start":100,"line_end":100,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":770},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":791},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386553,"byte_end":386559,"line_start":908,"line_end":908,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386868,"byte_end":386874,"line_start":917,"line_end":917,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":392390,"byte_end":392399,"line_start":1078,"line_end":1078,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":393930,"byte_end":393950,"line_start":1120,"line_end":1120,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":398115,"byte_end":398122,"line_start":1238,"line_end":1238,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":435125,"byte_end":435128,"line_start":18,"line_end":18,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":435322,"byte_end":435325,"line_start":28,"line_end":28,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":437307,"byte_end":437313,"line_start":89,"line_end":89,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":437708,"byte_end":437714,"line_start":105,"line_end":105,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439133,"byte_end":439139,"line_start":152,"line_end":152,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439765,"byte_end":439768,"line_start":182,"line_end":182,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439964,"byte_end":439967,"line_start":192,"line_end":192,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":440639,"byte_end":440644,"line_start":223,"line_end":223,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":440867,"byte_end":440872,"line_start":233,"line_end":233,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":441449,"byte_end":441454,"line_start":256,"line_end":256,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":441921,"byte_end":441926,"line_start":277,"line_end":277,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399449,"byte_end":399459,"line_start":36,"line_end":36,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445986,"byte_end":445992,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449934,"byte_end":449945,"line_start":184,"line_end":184,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4463,"byte_end":4465,"line_start":124,"line_end":124,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4668,"byte_end":4674,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":435}},{"kind":"Mod","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":302500,"byte_end":302510,"line_start":3,"line_end":3,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":436}},{"kind":"Mod","span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/lib.rs","byte_start":4726,"byte_end":4728,"line_start":135,"line_end":135,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":846}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/escape.rs","byte_start":56491,"byte_end":56510,"line_start":24,"line_end":24,"column_start":6,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/escape.rs","byte_start":57499,"byte_end":57518,"line_start":58,"line_end":58,"column_start":40,"column_end":59},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1153},"to":{"krate":20,"index":1557}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/escape.rs","byte_start":61748,"byte_end":61767,"line_start":204,"line_end":204,"column_start":35,"column_end":54},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1153},"to":{"krate":20,"index":1731}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/escape.rs","byte_start":62071,"byte_end":62090,"line_start":217,"line_end":217,"column_start":38,"column_end":57},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1153},"to":{"krate":20,"index":1739}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/map.rs","byte_start":63677,"byte_end":63686,"line_start":32,"line_end":32,"column_start":22,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/map.rs","byte_start":64358,"byte_end":64367,"line_start":53,"line_end":53,"column_start":50,"column_end":59},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":130},"to":{"krate":20,"index":1693}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/seq.rs","byte_start":67263,"byte_end":67268,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/seq.rs","byte_start":67845,"byte_end":67854,"line_start":36,"line_end":36,"column_start":22,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/seq.rs","byte_start":68666,"byte_end":68675,"line_start":61,"line_end":61,"column_start":55,"column_end":64},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":179},"to":{"krate":20,"index":1675}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/var.rs","byte_start":69704,"byte_end":69714,"line_start":14,"line_end":14,"column_start":22,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/var.rs","byte_start":69868,"byte_end":69878,"line_start":20,"line_end":20,"column_start":56,"column_end":66},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":222},"to":{"krate":20,"index":1731}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/var.rs","byte_start":70735,"byte_end":70748,"line_start":44,"line_end":44,"column_start":54,"column_end":67},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":238},"to":{"krate":20,"index":1739}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/de/mod.rs","byte_start":10688,"byte_end":10700,"line_start":144,"line_end":144,"column_start":18,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72663,"byte_end":72668,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":72859,"byte_end":72864,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":73220,"byte_end":73225,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":75220,"byte_end":75225,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":76539,"byte_end":76546,"line_start":158,"line_end":158,"column_start":27,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":77816,"byte_end":77823,"line_start":184,"line_end":184,"column_start":34,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1268},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78146,"byte_end":78153,"line_start":195,"line_end":195,"column_start":31,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1268},"to":{"krate":20,"index":8604}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78302,"byte_end":78309,"line_start":201,"line_end":201,"column_start":32,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1268},"to":{"krate":20,"index":9217}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78452,"byte_end":78459,"line_start":207,"line_end":207,"column_start":26,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78586,"byte_end":78593,"line_start":213,"line_end":213,"column_start":44,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/errors.rs","byte_start":78740,"byte_end":78747,"line_start":219,"line_end":219,"column_start":46,"column_end":53},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":79632,"byte_end":79643,"line_start":28,"line_end":28,"column_start":28,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/escapei.rs","byte_start":80835,"byte_end":80846,"line_start":56,"line_end":56,"column_start":28,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1305},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":334342,"byte_end":334352,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":336157,"byte_end":336166,"line_start":89,"line_end":89,"column_start":10,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":343975,"byte_end":343984,"line_start":285,"line_end":285,"column_start":30,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1338},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":344344,"byte_end":344353,"line_start":297,"line_end":297,"column_start":41,"column_end":50},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1338},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":344959,"byte_end":344968,"line_start":317,"line_end":317,"column_start":39,"column_end":48},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1338},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/attributes.rs","byte_start":345554,"byte_end":345564,"line_start":337,"line_end":337,"column_start":23,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1328},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":303490,"byte_end":303500,"line_start":39,"line_end":39,"column_start":10,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313023,"byte_end":313033,"line_start":323,"line_end":323,"column_start":30,"column_end":40},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":313534,"byte_end":313543,"line_start":341,"line_end":341,"column_start":10,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":317459,"byte_end":317467,"line_start":463,"line_end":463,"column_start":10,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":318613,"byte_end":318621,"line_start":506,"line_end":506,"column_start":30,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":319055,"byte_end":319064,"line_start":523,"line_end":523,"column_start":10,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":327706,"byte_end":327715,"line_start":760,"line_end":760,"column_start":30,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":328803,"byte_end":328808,"line_start":797,"line_end":797,"column_start":10,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":329652,"byte_end":329662,"line_start":816,"line_end":816,"column_start":20,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":329771,"byte_end":329780,"line_start":823,"line_end":823,"column_start":20,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":329893,"byte_end":329901,"line_start":830,"line_end":830,"column_start":20,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":330011,"byte_end":330020,"line_start":837,"line_end":837,"column_start":20,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":330133,"byte_end":330138,"line_start":844,"line_end":844,"column_start":20,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/events/mod.rs","byte_start":330641,"byte_end":330646,"line_start":861,"line_end":861,"column_start":31,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1379},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":354793,"byte_end":354799,"line_start":100,"line_end":100,"column_start":18,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386553,"byte_end":386559,"line_start":908,"line_end":908,"column_start":6,"column_end":12},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":386868,"byte_end":386874,"line_start":917,"line_end":917,"column_start":10,"column_end":16},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":392390,"byte_end":392399,"line_start":1078,"line_end":1078,"column_start":6,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":393930,"byte_end":393950,"line_start":1120,"line_end":1120,"column_start":6,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/reader.rs","byte_start":398115,"byte_end":398122,"line_start":1238,"line_end":1238,"column_start":6,"column_end":13},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":435125,"byte_end":435128,"line_start":18,"line_end":18,"column_start":17,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":435322,"byte_end":435325,"line_start":28,"line_end":28,"column_start":39,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":882},"to":{"krate":20,"index":2151}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":437307,"byte_end":437313,"line_start":89,"line_end":89,"column_start":17,"column_end":23},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":437708,"byte_end":437714,"line_start":105,"line_end":105,"column_start":42,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":906},"to":{"krate":20,"index":2162}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439133,"byte_end":439139,"line_start":152,"line_end":152,"column_start":49,"column_end":55},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":906},"to":{"krate":20,"index":2169}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439765,"byte_end":439768,"line_start":182,"line_end":182,"column_start":17,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":439964,"byte_end":439967,"line_start":192,"line_end":192,"column_start":39,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":937},"to":{"krate":20,"index":2127}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":440639,"byte_end":440644,"line_start":223,"line_end":223,"column_start":17,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":440867,"byte_end":440872,"line_start":233,"line_end":233,"column_start":41,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":956},"to":{"krate":20,"index":2133}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":441449,"byte_end":441454,"line_start":256,"line_end":256,"column_start":47,"column_end":52},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":956},"to":{"krate":20,"index":2139}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/var.rs","byte_start":441921,"byte_end":441926,"line_start":277,"line_end":277,"column_start":48,"column_end":53},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":956},"to":{"krate":20,"index":2145}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/se/mod.rs","byte_start":399449,"byte_end":399459,"line_start":36,"line_end":36,"column_start":20,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":445986,"byte_end":445992,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dorian/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.22.0/src/writer.rs","byte_start":449934,"byte_end":449945,"line_start":184,"line_end":184,"column_start":6,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1487},"to":{"krate":4294967295,"index":4294967295}}]}